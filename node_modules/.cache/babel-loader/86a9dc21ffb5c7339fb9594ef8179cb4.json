{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\PrintJokes.js\",\n    _s = $RefreshSig$();\n\nimport { StoreContext } from \"./storeContext\";\nimport React, { useEffect, useContext, useState } from \"react\";\n\nconst PrintJokes = () => {\n  _s();\n\n  const [store, setStore] = useContext(StoreContext);\n  const j = Object.values(store);\n  const [jokeCount, setJokeCount] = useState([store.length]); //console.log(j.map((e,y,i)=>console.log(e[\"counter\"])))\n\n  useEffect(() => {\n    //hae kategoriat jsonilla\n    let temp = 0;\n\n    if (store.length != null) {\n      temp = parseInt(store.length);\n    }\n\n    console.log(jokeCount);\n    setJokeCount(jokeCount => jokeCount + temp);\n  }, [store]);\n\n  const counter = () => {\n    console;\n    jokeCount.map(e => {\n      console.log(e);\n    });\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"green\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"vitsit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"p\\xF6\\xF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), j.map((element, i) => {\n      //console.log(i)\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [i + 1, \". \", element[\"joke\"], \" ---------------ja kategory on testissä   \", element[\"categories\"], \"\\n\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"p\\xF6\\xF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [counter(), jokeCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrintJokes, \"+T6HviC0ROWX2rDNw2wDcqXp5lM=\");\n\n_c = PrintJokes;\nexport default PrintJokes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintJokes\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/PrintJokes.js"],"names":["StoreContext","React","useEffect","useContext","useState","PrintJokes","store","setStore","j","Object","values","jokeCount","setJokeCount","length","temp","parseInt","console","log","counter","map","e","backgroundColor","element","i"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;;AAGA,MAAMC,UAAU,GAAG,MAAK;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,UAAU,CAACH,YAAD,CAApC;AACA,QAAMQ,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcJ,KAAd,CAAV;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CAACE,KAAK,CAACO,MAAP,CAAD,CAA1C,CAJsB,CAMtB;;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIY,IAAI,GAAG,CAAX;;AACA,QAAGR,KAAK,CAACO,MAAN,IAAe,IAAlB,EAAuB;AACrBC,MAAAA,IAAI,GAAGC,QAAQ,CAACT,KAAK,CAACO,MAAP,CAAf;AACD;;AAEDG,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AAEAC,IAAAA,YAAY,CAACD,SAAS,IAAIA,SAAS,GAAGG,IAA1B,CAAZ;AACD,GAVQ,EAUN,CAACR,KAAD,CAVM,CAAT;;AAYA,QAAMY,OAAO,GAAG,MAAK;AACnBF,IAAAA,OAAO;AACPL,IAAAA,SAAS,CAACQ,GAAV,CAAeC,CAAD,IAAM;AAACJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AAAe,KAApC;AACA,wBAAO;AAAA,gBAAK;AAAL;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAJD;;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAC;AAAjB,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIKb,CAAC,CAACW,GAAF,CAAM,CAACG,OAAD,EAAUC,CAAV,KAAgB;AACnB;AAEA,0BAAO;AAAA,mBAAaA,CAAC,GAAG,CAAjB,EAAoB,IAApB,EAA0BD,OAAO,CAAC,MAAD,CAAjC,EAA2C,4CAA3C,EAAyFA,OAAO,CAAC,YAAD,CAAhG,EAAgH,IAAhH;AAAA,SAASC,CAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAJF,CAJL,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAcE;AAAA,iBAAIL,OAAO,EAAX,EAAeP,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA5CD;;GAAMN,U;;KAAAA,U;AA6CN,eAAeA,UAAf","sourcesContent":["import { StoreContext } from \"./storeContext\";\r\nimport React, { useEffect, useContext, useState } from \"react\";\r\n\r\n\r\nconst PrintJokes = () =>{\r\n  const [store, setStore] = useContext(StoreContext);\r\n  const j = Object.values(store);\r\n  \r\n  const [jokeCount, setJokeCount] = useState([store.length])\r\n  \r\n  //console.log(j.map((e,y,i)=>console.log(e[\"counter\"])))\r\n  \r\n  \r\n  useEffect(() => {\r\n    //hae kategoriat jsonilla\r\n    let temp = 0;\r\n    if(store.length !=null){\r\n      temp = parseInt(store.length)\r\n    }\r\n    \r\n    console.log(jokeCount)\r\n\r\n    setJokeCount(jokeCount => jokeCount + temp )\r\n  }, [store]);\r\n\r\n  const counter = () =>{\r\n    console\r\n    jokeCount.map((e)=> {console.log(e)})\r\n    return <h2>{\"\"}</h2>\r\n  }\r\n  return(\r\n    <div style={{backgroundColor:\"green\"  }}>\r\n      <h3>vitsit</h3>\r\n      \r\n      <p>pöö</p>\r\n        {j.map((element, i) => {\r\n            //console.log(i)\r\n            \r\n            return <li key={i}>{i + 1}{\". \"}{element[\"joke\"]}{\" ---------------ja kategory on testissä   \"}{element[\"categories\"]}{\"\\n\"}</li>\r\n          })\r\n          \r\n        }\r\n\r\n      <p>pöö</p>\r\n      \r\n      <p>{counter()}{jokeCount}</p>\r\n    </div>\r\n  )\r\n}\r\nexport default PrintJokes;"]},"metadata":{},"sourceType":"module"}