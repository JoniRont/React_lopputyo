{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\Fetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\n\nconst Fetch = () => {\n  _s();\n\n  const defaultJokeValue = 10;\n  const [maara, setMaara] = useState(defaultJokeValue);\n  const [vitsit, setvitsit] = useContext([]);\n  const [jokeCounter, setCount] = useState(maara);\n  const [valittukategoria, setValittukategoria] = useState(\"kaikki\", \"explicit\", \"nerdy\");\n  const [etunimi, setEtunnimi] = useState(\"\");\n  const [sukunimi, setSukunimi] = useState(\"\");\n  const [kategoriat, setKategoriat] = useState([]);\n  useEffect(() => {\n    //hae kategoriat jsonilla\n    setKategoriat([\"kaikki\", \"explicit\", \"nerdy\"]);\n  }, []);\n\n  const lataa_vitsit = () => {\n    let base_url = \"http://api.icndb.com/\";\n    let lastPArt = `jokes/random/${maara}?firstName=${etunimi}&lastName=${sukunimi}`; //console.log(\"VAlittu kategoria----- \" + valittukategoria)\n\n    let limitcat = `&limitTo=[${valittukategoria}]`;\n    let id = `jokes/23`;\n    let finalUrl = base_url + lastPArt;\n\n    if (valittukategoria == \"kaikki\") {\n      finalUrl = base_url + lastPArt;\n    } else {\n      finalUrl = base_url + lastPArt + limitcat;\n    } //console.log(\"Haku urli\" + finalUrl)\n\n\n    fetch(finalUrl).then(resp => {\n      return resp.json();\n    }).then(json => {\n      //console.log(json)\n      //setvitsit(json.value);\n      let uusi_items = [...store.items, json.value];\n      setStore({ ...store,\n        items: uusi_items\n      });\n    });\n  };\n\n  const validateValue = e => {\n    if (e >= 1 && e <= 10) {\n      setCount(jokeCounter => jokeCounter + parseInt(e));\n      setMaara(e); //console.log(jokeCounter)\n    }\n  };\n\n  const kat = e => {\n    setValittukategoria(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      onChange: e => kat(e.target.value),\n      children: kategoriat.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 110\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      type: \"number\",\n      name: \"quantity\",\n      value: maara,\n      onChange: e => validateValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      type: \"text\",\n      placeholder: \"etunimi\",\n      value: etunimi,\n      onChange: e => setEtunnimi(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      type: \"text\",\n      placeholder: \"sukunimi\",\n      value: sukunimi,\n      onChange: e => setSukunimi(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      onClick: () => lataa_vitsit(),\n      children: \"Fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: valittukategoria\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Vitsej\\xE4 on haettu kaikkiaan: \", jokeCounter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Fetch, \"kFtyC9Wk9jYgBJPs/RqaTmqa8Wg=\");\n\n_c = Fetch;\nexport default Fetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/Fetch.js"],"names":["React","useContext","useEffect","useState","Fetch","defaultJokeValue","maara","setMaara","vitsit","setvitsit","jokeCounter","setCount","valittukategoria","setValittukategoria","etunimi","setEtunnimi","sukunimi","setSukunimi","kategoriat","setKategoriat","lataa_vitsit","base_url","lastPArt","limitcat","id","finalUrl","fetch","then","resp","json","uusi_items","store","items","value","setStore","validateValue","e","parseInt","kat","padding","margin","target","map","x"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState } from 'react'\r\n\r\nconst Fetch = () => {\r\n  const defaultJokeValue = 10;\r\n  const [maara, setMaara] = useState(defaultJokeValue);\r\n  const [vitsit, setvitsit] = useContext([]);\r\n  const [jokeCounter, setCount] = useState(maara)\r\n  const [valittukategoria, setValittukategoria] = useState(\"kaikki\", \"explicit\", \"nerdy\")\r\n  const [etunimi, setEtunnimi] = useState(\"\")\r\n  const [sukunimi, setSukunimi] = useState(\"\")\r\n  const [kategoriat, setKategoriat] = useState([])\r\n  \r\n  useEffect(() => {\r\n    //hae kategoriat jsonilla\r\n\r\n    setKategoriat([\"kaikki\", \"explicit\", \"nerdy\"])\r\n\r\n  }, []);\r\n\r\n  const lataa_vitsit = () => {\r\n\r\n    let base_url = \"http://api.icndb.com/\"\r\n    let lastPArt = `jokes/random/${maara}?firstName=${etunimi}&lastName=${sukunimi}`\r\n    //console.log(\"VAlittu kategoria----- \" + valittukategoria)\r\n    let limitcat = `&limitTo=[${valittukategoria}]`\r\n    let id = `jokes/23`\r\n    let finalUrl = base_url + lastPArt\r\n\r\n    if (valittukategoria == \"kaikki\") {\r\n      finalUrl = base_url + lastPArt\r\n    }\r\n    else {\r\n      finalUrl = base_url + lastPArt + limitcat\r\n    }\r\n    //console.log(\"Haku urli\" + finalUrl)\r\n    fetch(finalUrl)\r\n      .then((resp) => {\r\n        return resp.json();\r\n      })\r\n      .then((json) => {\r\n        //console.log(json)\r\n        //setvitsit(json.value);\r\n        let uusi_items = [...store.items, json.value];\r\n        setStore({ ...store, items: uusi_items });\r\n      });\r\n  };\r\n\r\n  const validateValue = (e) => {\r\n    if (e >= 1 && e <= 10) {\r\n      setCount(jokeCounter => jokeCounter + parseInt(e))\r\n      setMaara(e)\r\n      //console.log(jokeCounter)\r\n    }\r\n  }\r\n  const kat = (e) => {\r\n\r\n    setValittukategoria(e)\r\n  }\r\n\r\n  return (\r\n\r\n    <div style={{ padding: 20, margin: 20 }}>\r\n      \r\n      <select style={{ padding: 10, margin: 20 }} onChange={e => kat(e.target.value)}>{kategoriat.map((x) => <option>{x}</option>)}</select>;\r\n\r\n      {\r\n        //<select onChange={e=> kat(e.target.value)}>{kategoriat.map((x) => <option>{x}</option>)}</select>;\r\n        //console.log(etunimi+\" \" + sukunimi)\r\n      }\r\n      {\r\n        //console.log(\"kategoriat\"+kategoriat)\r\n      }\r\n\r\n      <input style={{ padding: 10, margin: 20 }} type=\"number\" name=\"quantity\" value={maara} onChange={e => validateValue(e.target.value)} />\r\n      <input style={{ padding: 10, margin: 20 }} type=\"text\" placeholder=\"etunimi\" value={etunimi} onChange={e => setEtunnimi(e.target.value)}  ></input>\r\n      <input style={{ padding: 10, margin: 20 }} type=\"text\" placeholder=\"sukunimi\" value={sukunimi} onChange={e => setSukunimi(e.target.value)}  ></input>\r\n      <button style={{ padding: 10, margin: 20 }} onClick={() => lataa_vitsit()}>Fetch</button>\r\n      <p>{valittukategoria}</p>\r\n      {\r\n        //console.log(vitsit)\r\n      }\r\n\r\n      <div>\r\n      {/*\r\n        <h3>vitsit</h3>\r\n        <p>{JSON.stringify(vitsit.keys, [\"joke\"], 1)}</p>\r\n          //console.log(vitsit[0][\"joke\"])\r\n          vitsit.map((element, i) => {\r\n            //console.log(element[\"joke\"])\r\n            return <li key={i}>{i + 1}{\". \"}{element[\"joke\"]}{\" ---------------ja kategory on testissä   \"}{element[\"categories\"]}{\"\\n\"}</li>\r\n          })\r\n        */\r\n        }\r\n\r\n        <p>Vitsejä on haettu kaikkiaan: {jokeCounter}</p>\r\n      </div>\r\n      \r\n    </div>\r\n  \r\n\r\n  );\r\n}\r\n\r\nexport default Fetch;\r\n"]},"metadata":{},"sourceType":"module"}