{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\PrintJokes.js\",\n    _s = $RefreshSig$();\n\nimport { StoreContext } from \"./storeContext\";\nimport React, { useEffect, useContext, useState } from \"react\";\n\nconst PrintJokes = () => {\n  _s();\n\n  const [store, setStore] = useContext(StoreContext);\n  const j = Object.values(store);\n  const [jokeCount, setJokeCount] = useState([0]);\n  console.log(jokeCount); //console.log(j.map((e,y,i)=>console.log(e[\"counter\"])))\n\n  useEffect(() => {\n    //hae kategoriat jsonilla\n    console.log(jokeCount);\n    console.log(store.length);\n    let temp = parseInt(store.length);\n    console.log(temp);\n    setJokeCount(jokeCount => [...(jokeCount + 2)]);\n  }, [store]);\n\n  const counter = () => {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: jokeCount.map\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"green\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"vitsit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"p\\xF6\\xF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), j.map((element, i) => {\n      //console.log(i)\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [i + 1, \". \", element[\"joke\"], \" ---------------ja kategory on testissä   \", element[\"categories\"], \"\\n\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"p\\xF6\\xF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"vitsejä on: \" + jokeCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrintJokes, \"NfX12ZHyAsXs0Z9ykZdp4+NrnYU=\");\n\n_c = PrintJokes;\nexport default PrintJokes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintJokes\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/PrintJokes.js"],"names":["StoreContext","React","useEffect","useContext","useState","PrintJokes","store","setStore","j","Object","values","jokeCount","setJokeCount","console","log","length","temp","parseInt","counter","map","backgroundColor","element","i"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;;AAGA,MAAMC,UAAU,GAAG,MAAK;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,UAAU,CAACH,YAAD,CAApC;AACA,QAAMQ,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcJ,KAAd,CAAV;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CAAC,CAAD,CAAD,CAA1C;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EALsB,CAMtB;;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,MAAlB;AACA,QAAIC,IAAI,GAAGC,QAAQ,CAACX,KAAK,CAACS,MAAP,CAAnB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAJ,IAAAA,YAAY,CAACD,SAAS,IAAI,CAAC,IAAGA,SAAS,GAAG,CAAf,CAAD,CAAd,CAAZ;AACD,GAPQ,EAON,CAACL,KAAD,CAPM,CAAT;;AASA,QAAMY,OAAO,GAAG,MAAK;AACnB,wBAAO;AAAA,gBAAKP,SAAS,CAACQ;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAC;AAAjB,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGKZ,CAAC,CAACW,GAAF,CAAM,CAACE,OAAD,EAAUC,CAAV,KAAgB;AACnB;AAEA,0BAAO;AAAA,mBAAaA,CAAC,GAAG,CAAjB,EAAoB,IAApB,EAA0BD,OAAO,CAAC,MAAD,CAAjC,EAA2C,4CAA3C,EAAyFA,OAAO,CAAC,YAAD,CAAhG,EAAgH,IAAhH;AAAA,SAASC,CAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAJF,CAHL,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAkBE;AAAA,gBAAI,iBAAeX;AAAnB;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA3CD;;GAAMN,U;;KAAAA,U;AA4CN,eAAeA,UAAf","sourcesContent":["import { StoreContext } from \"./storeContext\";\r\nimport React, { useEffect, useContext, useState } from \"react\";\r\n\r\n\r\nconst PrintJokes = () =>{\r\n  const [store, setStore] = useContext(StoreContext);\r\n  const j = Object.values(store);\r\n  \r\n  const [jokeCount, setJokeCount] = useState([0])\r\n  console.log(jokeCount)\r\n  //console.log(j.map((e,y,i)=>console.log(e[\"counter\"])))\r\n  \r\n  \r\n  useEffect(() => {\r\n    //hae kategoriat jsonilla\r\n    console.log(jokeCount)\r\n    console.log(store.length)\r\n    let temp = parseInt(store.length)\r\n    console.log(temp)\r\n    setJokeCount(jokeCount => [...jokeCount + 2])\r\n  }, [store]);\r\n\r\n  const counter = () =>{\r\n    return <h2>{jokeCount.map}</h2>\r\n  }\r\n  return(\r\n    <div style={{backgroundColor:\"green\"  }}>\r\n      <h3>vitsit</h3>\r\n      <p>pöö</p>\r\n        {j.map((element, i) => {\r\n            //console.log(i)\r\n            \r\n            return <li key={i}>{i + 1}{\". \"}{element[\"joke\"]}{\" ---------------ja kategory on testissä   \"}{element[\"categories\"]}{\"\\n\"}</li>\r\n          })\r\n          \r\n        }\r\n      \r\n      \r\n      \r\n      \r\n      \r\n      \r\n      <p>pöö</p>\r\n      \r\n      <p>{\"vitsejä on: \"+jokeCount}</p>\r\n    </div>\r\n  )\r\n}\r\nexport default PrintJokes;"]},"metadata":{},"sourceType":"module"}