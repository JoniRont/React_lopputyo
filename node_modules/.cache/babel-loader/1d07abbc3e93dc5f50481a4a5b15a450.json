{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\PrintJokes.js\",\n    _s = $RefreshSig$();\n\nimport { StoreContext } from \"./storeContext\";\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\n/**\r\n * Ihan hirveetä koodia mut toimii, eka count päivitys on ehdollistettu\r\n * koska count value on alussa (1), jota en tietenkään halunnut\r\n * varmaan olis löytyny joku järkevämpikin tapa tehdä tää\r\n */\n\nconst PrintJokes = () => {\n  _s();\n\n  const [store, setStore] = useContext(StoreContext);\n  const [count, setCount] = useState(0);\n\n  if (!StoreContext) {\n    const j = Object.values(store);\n  }\n\n  const [firstUpdate, setFirstUpdate] = useState(true);\n  useEffect(() => {\n    if (firstUpdate) {\n      setFirstUpdate(false);\n    } else {\n      setCount(+j.length + +count);\n    }\n  }, [store]);\n\n  const print = () => {\n    if (!firstUpdate) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: j.map((element, i) => {\n          console.log(element);\n          console.log(element.joke);\n\n          if (element.joke == undefined) {\n            return /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Ei yhtään vitsiä\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 24\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [i + 1, \". \", element.joke, \"\\n\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"green\",\n      padding: 10,\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Vitsit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), print(), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrintJokes, \"F8Q2ibkJhQ8wgVVWvfDaOP0jefQ=\");\n\n_c = PrintJokes;\nexport default PrintJokes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintJokes\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/PrintJokes.js"],"names":["StoreContext","React","useEffect","useContext","useState","useRef","PrintJokes","store","setStore","count","setCount","j","Object","values","firstUpdate","setFirstUpdate","length","print","map","element","i","console","log","joke","undefined","backgroundColor","padding","margin"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,OAA/D;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,UAAU,CAACH,YAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;;AACF,MAAG,CAACJ,YAAJ,EAAiB;AACf,UAAMW,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAV;AACD;;AAIC,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,IAAD,CAA9C;AAGAF,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIY,WAAJ,EAAiB;AACfC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAFD,MAGK;AACHL,MAAAA,QAAQ,CAAE,CAACC,CAAC,CAACK,MAAH,GAAY,CAACP,KAAf,CAAR;AACD;AACF,GARQ,EAQN,CAACF,KAAD,CARM,CAAT;;AASA,QAAMU,KAAK,GAAG,MAAM;AAClB,QAAI,CAACH,WAAL,EAAkB;AAGhB,0BAEE;AAAA,kBAEIH,CAAC,CAACO,GAAF,CAAM,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,IAApB;;AACA,cAAIJ,OAAO,CAACI,IAAR,IAAgBC,SAApB,EAA+B;AAC7B,gCAAO;AAAA,wBAAa;AAAb,eAASJ,CAAT;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,8BAAO;AAAA,uBAAYA,CAAC,GAAG,CAAhB,EAAmB,IAAnB,EAAyBD,OAAO,CAACI,IAAjC,EAAuC,IAAvC;AAAA,aAAQH,CAAR;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SARD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAgBD;AACF,GArBD;;AAsBA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,OAAO,EAAE,EAArC;AAAyCC,MAAAA,MAAM,EAAE;AAAjD,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGV,KAAK,EAJR,eAKE;AAAA,gBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArDD;;GAAMH,U;;KAAAA,U;AAsDN,eAAeA,UAAf","sourcesContent":["import { StoreContext } from \"./storeContext\";\r\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\r\n\r\n/**\r\n * Ihan hirveetä koodia mut toimii, eka count päivitys on ehdollistettu\r\n * koska count value on alussa (1), jota en tietenkään halunnut\r\n * varmaan olis löytyny joku järkevämpikin tapa tehdä tää\r\n */\r\n\r\nconst PrintJokes = () => {\r\n  const [store, setStore] = useContext(StoreContext);\r\n  const [count, setCount] = useState(0);\r\nif(!StoreContext){\r\n  const j = Object.values(store);\r\n}\r\n  \r\n\r\n\r\n  const [firstUpdate, setFirstUpdate] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (firstUpdate) {\r\n      setFirstUpdate(false)\r\n    }\r\n    else {\r\n      setCount((+j.length + +count))\r\n    }\r\n  }, [store])\r\n  const print = () => {\r\n    if (!firstUpdate) {\r\n\r\n\r\n      return (\r\n\r\n        <div >\r\n          {\r\n            j.map((element, i) => {\r\n              console.log(element)\r\n              console.log(element.joke)\r\n              if (element.joke == undefined) {\r\n                return <h2 key={i}>{\"Ei yhtään vitsiä\"}</h2>\r\n              }\r\n\r\n              return <p key={i}>{i + 1}{\". \"}{element.joke}{\"\\n\"}</p>\r\n            })\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <div style={{ backgroundColor: \"green\", padding: 10, margin: 20 }}>\r\n      <h2>Vitsit</h2>\r\n\r\n\r\n      {print()}\r\n      <h2>{count}</h2>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default PrintJokes;"]},"metadata":{},"sourceType":"module"}