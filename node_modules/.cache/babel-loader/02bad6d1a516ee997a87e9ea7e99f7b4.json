{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\Search.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext } from 'react';\n\nconst Search = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const defaulJokeValue = 1;\n  const [maara, setMaara] = useState(defaulJokeValue);\n  const [faktat, setFaktat] = useState([]);\n  const StoreContext = /*#__PURE__*/createContext([{}, () => {}]);\n  const [jokeCounter, setCount] = useState(maara);\n  const tempArray = [];\n  useEffect(() => {\n    const lataa_faktat = () => {\n      let base_url = \"http://api.icndb.com/\";\n      fetch(base_url + `jokes/random/${maara}`).then(resp => {\n        return resp.json();\n      }).then(json => {\n        setFaktat(json.value);\n      });\n    };\n\n    lataa_faktat();\n  }, [maara]);\n\n  const validateValue = e => {\n    if (e >= 1 && e <= 10) {\n      setCount(jokeCounter => jokeCounter + parseInt(e));\n      setMaara(e);\n      console.log(jokeCounter);\n    }\n  };\n\n  const StoreProvider = ({\n    children\n  }) => {\n    _s();\n\n    const [state, setState] = useState({\n      tila: false,\n      items: []\n    });\n    return /*#__PURE__*/_jsxDEV(StoreContext.Provider, {\n      value: [state, setState],\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this);\n  };\n\n  _s(StoreProvider, \"2WYk/EeMSL40KrC2lKRhqDu2ihQ=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"vitsit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"jutut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: maara,\n      onChange: e => validateValue(e.target.value),\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setFaktat([]);\n        setMaara(0);\n      },\n      children: \"Tyhjenn\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Faktat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(faktat.keys, [\"joke\"], 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), faktat.map((element, i) => {\n        //console.log(element[\"joke\"])\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [i + 1, \". \", element[\"joke\"], \"\\n\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Vitsej\\xE4 on haettu kaikkiaan: \", jokeCounter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Search, \"O/la9MqXyCBuJiBxZIRK3ccz+NA=\");\n\n_c = Search;\nexport default {\n  StoreContext,\n  StoreProvider\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/Search.js"],"names":["React","useEffect","useState","createContext","Search","defaulJokeValue","maara","setMaara","faktat","setFaktat","StoreContext","jokeCounter","setCount","tempArray","lataa_faktat","base_url","fetch","then","resp","json","value","validateValue","e","parseInt","console","log","StoreProvider","children","state","setState","tila","items","target","JSON","stringify","keys","map","element","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createContext } from 'react'\r\n\r\nconst Search = () => {\r\n  const defaulJokeValue = 1;\r\n  const [maara, setMaara] = useState(defaulJokeValue);\r\n  const [faktat, setFaktat] = useState([]);\r\n  const StoreContext = createContext([{}, () => {}]);\r\n  const [jokeCounter, setCount] = useState(maara)\r\n  const tempArray = [];\r\n  useEffect(() => {\r\n    const lataa_faktat = () => {\r\n      let base_url = \"http://api.icndb.com/\"\r\n\r\n      fetch(base_url + `jokes/random/${maara}`)\r\n        .then((resp) => {\r\n          return resp.json();\r\n        })\r\n        .then((json) => {\r\n          \r\n          setFaktat(json.value);\r\n        });\r\n    };\r\n\r\n    lataa_faktat();\r\n  }, [maara]);\r\n  \r\n  const validateValue = (e) =>{\r\n    if(e>=1 && e<=10){\r\n      setCount(jokeCounter => jokeCounter+parseInt(e))\r\n      setMaara(e)\r\n      \r\n      console.log(jokeCounter)\r\n      \r\n    }\r\n  }\r\n  \r\n    \r\n  \r\nconst StoreProvider = ({ children }) => {\r\n  const [state, setState] = useState({\r\n    tila: false,\r\n    items: [],\r\n  });\r\n\r\n  return (\r\n    <StoreContext.Provider value={[state, setState]}>\r\n      {children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <select>\r\n        <option>vitsit</option>\r\n        <option>jutut</option>\r\n      </select>\r\n      <input\r\n        value={maara}\r\n        onChange={(e) => validateValue(e.target.value)}\r\n        type=\"number\"\r\n      />\r\n      <button onClick={() => { setFaktat([]); setMaara(0);}}>Tyhjennä</button>\r\n      \r\n      \r\n      \r\n      <div>\r\n        <h3>Faktat</h3>\r\n        \r\n        <p>{JSON.stringify(faktat.keys, [\"joke\"], 1)}</p>\r\n        \r\n        {\r\n        \r\n          \r\n          //console.log(faktat[0][\"joke\"])\r\n        }\r\n        {\r\n          faktat.map((element, i)=> {\r\n            //console.log(element[\"joke\"])\r\n          return <li key={i}>{i+1}{\". \"}{element[\"joke\"]}{\"\\n\"}</li>\r\n          })\r\n        }\r\n        <p>Vitsejä on haettu kaikkiaan: {jokeCounter}</p>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default { StoreContext, StoreProvider };\r\n"]},"metadata":{},"sourceType":"module"}