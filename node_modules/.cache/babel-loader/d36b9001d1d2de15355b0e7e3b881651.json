{"ast":null,"code":"import _slicedToArray from\"C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useEffect,useState,useContext}from'react';import{StoreContext}from\"./storeContext\";import'./Fetch.css';/**\r\n * Haetaan haluttu määrä vitsejä apista ja tallennetaan ne storeContexiin \r\n * kategoriat on tehty kovakoodauksella mikäli en muistanut/jaksanut hakea niitä\r\n */var Fetch=function Fetch(){var minJokeCount=1;var maxJokeCount=10;var defaultJokeValueCount=10;var _useState=useState(defaultJokeValueCount),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var _useState3=useState(\"kaikki\",\"explicit\",\"nerdy\"),_useState4=_slicedToArray(_useState3,2),chosenCategory=_useState4[0],setChosenCategory=_useState4[1];var _useState5=useState(\"Chuck\"),_useState6=_slicedToArray(_useState5,2),firstname=_useState6[0],setFirstname=_useState6[1];var _useState7=useState(\"Norris\"),_useState8=_slicedToArray(_useState7,2),lastname=_useState8[0],setLastname=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),catecories=_useState10[0],setCategories=_useState10[1];var _useContext=useContext(StoreContext),_useContext2=_slicedToArray(_useContext,2),store=_useContext2[0],setStore=_useContext2[1];useEffect(function(){setCategories([\"kaikki kategoriat\",\"explicit\",\"nerdy\"]);},[]);var fetchJokes=function fetchJokes(){var base_url=\"https://api.icndb.com/\";var lastPArt=\"jokes/random/\".concat(count,\"?firstName=\").concat(firstname,\"&lastName=\").concat(lastname,\"&escape=javascript\");var limitcat=\"&limitTo=[\".concat(chosenCategory,\"]\");var finalUrl=base_url+lastPArt;if(chosenCategory===\"kaikki\"){finalUrl=base_url+lastPArt;}else{finalUrl=base_url+lastPArt+limitcat;}fetch(finalUrl).then(function(resp){return resp.json();}).then(function(json){setStore(json.value);});};var validateValue=function validateValue(e){if(e>=minJokeCount&&e<=maxJokeCount){setCount(e);}};var kat=function kat(e){setChosenCategory(e);};// päivitetään sivu jotta printjokes komponentin laskuri nollautuu\n// olisi pitäny tehä useContexilla nollaus, mut en oo ainakaa vielä tehny näköjää\nvar refreshPage=function refreshPage(){window.location.reload();};return/*#__PURE__*/_jsxs(\"div\",{className:\"jokeBox\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"labels\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Kategoriat\"}),/*#__PURE__*/_jsx(\"select\",{className:\"sel\",onChange:function onChange(e){return kat(e.target.value);},children:catecories.map(function(x,i){return/*#__PURE__*/_jsx(\"option\",{className:\"sel\",children:x},i);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"labels\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Vitsien m\\xE4\\xE4r\\xE4\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",alt:\"count\",value:count,onChange:function onChange(e){return validateValue(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"labels\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Etunimi\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"etunimi\",value:firstname,onChange:function onChange(e){return setFirstname(e.target.value);}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"labels\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Sukunimi\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"sukunimi\",value:lastname,onChange:function onChange(e){return setLastname(e.target.value);}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"labels\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return fetchJokes();},children:\"Hae vitsit\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"labels\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return refreshPage();},children:\"Tyhjenn\\xE4\"})})]});};export default Fetch;","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/Fetch.js"],"names":["React","useEffect","useState","useContext","StoreContext","Fetch","minJokeCount","maxJokeCount","defaultJokeValueCount","count","setCount","chosenCategory","setChosenCategory","firstname","setFirstname","lastname","setLastname","catecories","setCategories","store","setStore","fetchJokes","base_url","lastPArt","limitcat","finalUrl","fetch","then","resp","json","value","validateValue","e","kat","refreshPage","window","location","reload","target","map","x","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport { StoreContext } from \"./storeContext\";\r\nimport './Fetch.css'\r\n\r\n/**\r\n * Haetaan haluttu määrä vitsejä apista ja tallennetaan ne storeContexiin \r\n * kategoriat on tehty kovakoodauksella mikäli en muistanut/jaksanut hakea niitä\r\n */\r\nconst Fetch = () => {\r\n  const minJokeCount = 1;\r\n  const maxJokeCount = 10;\r\n  const defaultJokeValueCount = 10;\r\n  const [count, setCount] = useState(defaultJokeValueCount);\r\n  const [chosenCategory, setChosenCategory] = useState(\"kaikki\", \"explicit\", \"nerdy\")\r\n  const [firstname, setFirstname] = useState(\"Chuck\")\r\n  const [lastname, setLastname] = useState(\"Norris\")\r\n  const [catecories, setCategories] = useState([])\r\n  const [store, setStore] = useContext(StoreContext);\r\n  useEffect(() => {\r\n    setCategories([\"kaikki kategoriat\", \"explicit\", \"nerdy\"])\r\n  }, []);\r\n\r\n  const fetchJokes = () => {\r\n    let base_url = \"https://api.icndb.com/\"\r\n    let lastPArt = `jokes/random/${count}?firstName=${firstname}&lastName=${lastname}&escape=javascript`\r\n    let limitcat = `&limitTo=[${chosenCategory}]`\r\n    let finalUrl = base_url + lastPArt\r\n    if (chosenCategory === \"kaikki\") {\r\n      finalUrl = base_url + lastPArt\r\n    }\r\n    else {\r\n      finalUrl = base_url + lastPArt + limitcat\r\n    }\r\n    fetch(finalUrl)\r\n      .then((resp) => {\r\n        return resp.json();\r\n      })\r\n      .then((json) => {\r\n        setStore(json.value)\r\n      });\r\n  };\r\n\r\n  const validateValue = (e) => {\r\n    if (e >= minJokeCount && e <= maxJokeCount) {\r\n      setCount(e)\r\n    }\r\n  }\r\n\r\n  const kat = (e) => {\r\n    setChosenCategory(e)\r\n  }\r\n  // päivitetään sivu jotta printjokes komponentin laskuri nollautuu\r\n  // olisi pitäny tehä useContexilla nollaus, mut en oo ainakaa vielä tehny näköjää\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div className=\"jokeBox\">\r\n      <div className=\"labels\">\r\n        <label>Kategoriat</label>\r\n        <select className=\"sel\" onChange={e => kat(e.target.value)}>{catecories.map((x, i) => <option className=\"sel\" key={i}>{x}</option>)}</select>\r\n      </div>\r\n\r\n      <div className=\"labels\">\r\n        <label>Vitsien määrä</label>\r\n        <input type=\"number\" alt=\"count\" value={count} onChange={e => validateValue(e.target.value)} />\r\n      </div>\r\n\r\n      <div className=\"labels\">\r\n        <label>Etunimi</label>\r\n        <input type=\"text\" placeholder=\"etunimi\" value={firstname} onChange={e => setFirstname(e.target.value)}  ></input>\r\n      </div>\r\n\r\n      <div className=\"labels\">\r\n        <label>Sukunimi</label>\r\n        <input type=\"text\" placeholder=\"sukunimi\" value={lastname} onChange={e => setLastname(e.target.value)}  ></input>\r\n      </div>\r\n\r\n      <div className=\"labels\">\r\n        <button onClick={() => fetchJokes()}>Hae vitsit</button>\r\n      </div>\r\n\r\n      <div className=\"labels\">\r\n        <button onClick={() => refreshPage()}>Tyhjennä</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fetch;\r\n"]},"metadata":{},"sourceType":"module"}