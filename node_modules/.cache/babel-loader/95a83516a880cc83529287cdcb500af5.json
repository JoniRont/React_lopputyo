{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\Fetch.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nconst Fetch = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const defaulJokeValue = 10;\n  const [maara, setMaara] = useState(defaulJokeValue);\n  const [faktat, setFaktat] = useState([]);\n  const [jokeCounter, setCount] = useState(maara);\n  const tempArray = [];\n\n  const lataa_faktat = () => {\n    _s();\n\n    let base_url = \"http://api.icndb.com/\";\n    useEffect(() => {\n      fetch();\n    }, [faktat]);\n  };\n\n  _s(lataa_faktat, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  useEffect(() => {\n    fetch(base_url + `jokes/random/${maara}`).then(response => response.json()).then(json => setAnswers([...answers, json.title]));\n  }, [hackIndex]);\n\n  const validateValue = e => {\n    if (e >= 1 && e <= 10) {\n      setCount(jokeCounter => jokeCounter + parseInt(e));\n      setMaara(e);\n      console.log(jokeCounter);\n    }\n  };\n\n  const input = props => {\n    let textInput = /*#__PURE__*/React.createRef();\n\n    function handleClick() {\n      console.log(textInput.current.value);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: textInput,\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleClick,\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"vitsit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"jutut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      on: true,\n      onClick: () => lataa_faktat,\n      children: \"Fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), input()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(Fetch, \"O/la9MqXyCBuJiBxZIRK3ccz+NA=\");\n\n_c = Fetch;\nexport default Fetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/Fetch.js"],"names":["React","useEffect","useState","Fetch","defaulJokeValue","maara","setMaara","faktat","setFaktat","jokeCounter","setCount","tempArray","lataa_faktat","base_url","fetch","then","response","json","setAnswers","answers","title","hackIndex","validateValue","e","parseInt","console","log","input","props","textInput","createRef","handleClick","current","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAClB,QAAMC,eAAe,GAAG,EAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,eAAD,CAAlC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,WAAD,EAAcC,QAAd,IAA0BR,QAAQ,CAACG,KAAD,CAAxC;AACA,QAAMM,SAAS,GAAG,EAAlB;;AAEA,QAAMC,YAAY,GAAG,MAAM;AAAA;;AAGzB,QAAIC,QAAQ,GAAG,uBAAf;AACAZ,IAAAA,SAAS,CAAC,MAAM;AACda,MAAAA,KAAK;AAEJ,KAHM,EAGJ,CAACP,MAAD,CAHI,CAAT;AAGe,GAPjB;;AAPkB,KAOZK,YAPY;;AAgBhBX,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAACD,QAAQ,GAAI,gBAAeR,KAAM,EAAlC,CAAL,CACGU,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAIC,UAAU,CAAC,CAAC,GAAGC,OAAJ,EAAaF,IAAI,CAACG,KAAlB,CAAD,CAF1B;AAGD,GAJQ,EAIN,CAACC,SAAD,CAJM,CAAT;;AAQJ,QAAMC,aAAa,GAAIC,CAAD,IAAO;AAC3B,QAAIA,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,EAAnB,EAAuB;AACrBb,MAAAA,QAAQ,CAACD,WAAW,IAAIA,WAAW,GAAGe,QAAQ,CAACD,CAAD,CAAtC,CAAR;AACAjB,MAAAA,QAAQ,CAACiB,CAAD,CAAR;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AAED;AACF,GARD;;AAUA,QAAMkB,KAAK,GAAGC,KAAK,IAAI;AAErB,QAAIC,SAAS,gBAAG7B,KAAK,CAAC8B,SAAN,EAAhB;;AAEA,aAASC,WAAT,GAAuB;AACrBN,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAS,CAACG,OAAV,CAAkBC,KAA9B;AACD;;AAED,wBACE;AAAA,8BACE;AAAO,QAAA,GAAG,EAAEJ,SAAZ;AAAuB,QAAA,WAAW,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,OAAO,EAAEE,WAAd;AAA2B,QAAA,SAAS,EAAC,MAArC;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAhBD;;AAmBA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAQ,MAAA,EAAE,MAAV;AAAW,MAAA,OAAO,EAAE,MAAMnB,YAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAMGe,KAAK,EANR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWC,CAhED;;IAAMxB,K;;KAAAA,K;AAkEN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Fetch = () => {\r\n  const defaulJokeValue = 10;\r\n  const [maara, setMaara] = useState(defaulJokeValue);\r\n  const [faktat, setFaktat] = useState([]);\r\n  const [jokeCounter, setCount] = useState(maara)\r\n  const tempArray = [];\r\n\r\n  const lataa_faktat = () => {\r\n\r\n\r\n    let base_url = \"http://api.icndb.com/\"\r\n    useEffect(() => {\r\n      fetch()\r\n        \r\n      }, [faktat])}\r\n  \r\n    useEffect(() => {\r\n      fetch(base_url + `jokes/random/${maara}`)\r\n        .then(response => response.json())\r\n        .then(json => setAnswers([...answers, json.title]));\r\n    }, [hackIndex]);\r\n\r\n\r\n\r\nconst validateValue = (e) => {\r\n  if (e >= 1 && e <= 10) {\r\n    setCount(jokeCounter => jokeCounter + parseInt(e))\r\n    setMaara(e)\r\n\r\n    console.log(jokeCounter)\r\n\r\n  }\r\n}\r\n\r\nconst input = props => {\r\n\r\n  let textInput = React.createRef();\r\n\r\n  function handleClick() {\r\n    console.log(textInput.current.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input ref={textInput} placeholder=\"Type a message...\" />\r\n      <div onClick={handleClick} className=\"icon\">\r\n        <i className=\"fa fa-play\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nreturn (\r\n  <div>\r\n    <select>\r\n      <option>vitsit</option>\r\n      <option>jutut</option>\r\n    </select>\r\n    <button on onClick={() => lataa_faktat}>Fetch</button>\r\n    {input()}\r\n  </div>\r\n\r\n);\r\n}\r\n\r\nexport default Fetch;\r\n"]},"metadata":{},"sourceType":"module"}