{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\Fetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nconst Fetch = () => {\n  _s();\n\n  const defaulJokeValue = 10;\n  const [maara, setMaara] = useState(defaulJokeValue);\n  const [faktat, setFaktat] = useState([]);\n  const [jokeCounter, setCount] = useState(maara);\n  let tempArray = [];\n  let valittuKategoria = \"\";\n  const [etunimi, setEtunnimi] = useState(\"\");\n  const [sukunimi, setSukunimi] = useState(\"\");\n  const [kategoriat, setKategoriat] = useState([]);\n  const firstname = \"\";\n  useEffect(() => {\n    //hae kategoriat jsonilla\n    setKategoriat([\"\", \"explicit\", \"nerdy\"]);\n    console.log(kategoriat);\n  }, []);\n\n  const lataa_faktat = () => {\n    let base_url = \"http://api.icndb.com/\";\n    let lastPArt = `jokes/random/${maara}?firstName=${etunimi}&lastName=${sukunimi}&limitTo=[${valittuKategoria}]`;\n    let id = `jokes/23`;\n    fetch(base_url + lastPArt).then(resp => {\n      return resp.json();\n    }).then(json => {\n      console.log(json);\n      setFaktat(json.value);\n      setKategoriat(json[\"categories\"]);\n    });\n  };\n\n  const validateValue = e => {\n    if (e >= 1 && e <= 10) {\n      setCount(jokeCounter => jokeCounter + parseInt(e));\n      setMaara(e); //console.log(jokeCounter)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e,\n      children: kategoriat.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 49\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      type: \"number\",\n      name: \"quantity\",\n      value: maara,\n      onChange: e => validateValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      type: \"text\",\n      placeholder: \"etunimi\",\n      value: etunimi,\n      onChange: e => setEtunnimi(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      type: \"text\",\n      placeholder: \"sukunimi\",\n      value: sukunimi,\n      onChange: e => setSukunimi(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      onClick: () => lataa_faktat(),\n      children: \"Fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Fetch, \"QwDYiBKfNeJZakqhEls4V1bib4U=\");\n\n_c = Fetch;\nexport default Fetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/Fetch.js"],"names":["React","useEffect","useState","Fetch","defaulJokeValue","maara","setMaara","faktat","setFaktat","jokeCounter","setCount","tempArray","valittuKategoria","etunimi","setEtunnimi","sukunimi","setSukunimi","kategoriat","setKategoriat","firstname","console","log","lataa_faktat","base_url","lastPArt","id","fetch","then","resp","json","value","validateValue","e","parseInt","padding","margin","map","x","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Fetch = () => {\r\n  const defaulJokeValue = 10;\r\n  const [maara, setMaara] = useState(defaulJokeValue);\r\n  const [faktat, setFaktat] = useState([]);\r\n  const [jokeCounter, setCount] = useState(maara)\r\n  let tempArray = [];\r\n  let valittuKategoria = \"\";\r\n  const [etunimi, setEtunnimi] = useState(\"\")\r\n  const [sukunimi, setSukunimi] = useState(\"\")\r\n  const [kategoriat, setKategoriat] = useState([])\r\n  const firstname = \"\";\r\n  useEffect(() => {\r\n    //hae kategoriat jsonilla\r\n    setKategoriat([\"\",\"explicit\",\"nerdy\"])\r\n    console.log(kategoriat)\r\n  }, []);\r\n  \r\n  const lataa_faktat = () => {\r\n\r\n    let base_url = \"http://api.icndb.com/\"\r\n    let lastPArt = `jokes/random/${maara}?firstName=${etunimi}&lastName=${sukunimi}&limitTo=[${valittuKategoria}]`\r\n    let id = `jokes/23`\r\n    \r\n    fetch(base_url + lastPArt)\r\n      .then((resp) => {\r\n        return resp.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json)\r\n        setFaktat(json.value);\r\n        setKategoriat(json[\"categories\"])\r\n      });\r\n  };\r\n\r\n \r\n\r\n  const validateValue = (e) => {\r\n    if (e >= 1 && e <= 10) {\r\n      setCount(jokeCounter => jokeCounter + parseInt(e))\r\n      setMaara(e)\r\n\r\n      //console.log(jokeCounter)\r\n\r\n    }\r\n  }\r\n\r\n  \r\nreturn (\r\n  <div style={{padding:20,margin:20}}>\r\n    \r\n    <select onChange={e}>{kategoriat.map((x) => <option>{x}</option>)}</select>;\r\n    \r\n    {\r\n      //console.log(etunimi+\" \" + sukunimi)\r\n    }\r\n    {\r\n      //console.log(\"kategoriat\"+kategoriat)\r\n    }\r\n    <input style={{padding:10,margin:20}} type=\"number\" name=\"quantity\" value={maara} onChange={e => validateValue(e.target.value)} />\r\n    <input style={{padding:10,margin:20}} type=\"text\" placeholder=\"etunimi\" value={etunimi} onChange={e => setEtunnimi(e.target.value)}  ></input>\r\n    <input style={{padding:10,margin:20}} type=\"text\" placeholder=\"sukunimi\" value={sukunimi} onChange={e => setSukunimi(e.target.value)}  ></input>\r\n    <button style={{padding:10,margin:20}} onClick={() => lataa_faktat()}>Fetch</button>\r\n  </div>\r\n\r\n);\r\n}\r\n\r\nexport default Fetch;\r\n"]},"metadata":{},"sourceType":"module"}