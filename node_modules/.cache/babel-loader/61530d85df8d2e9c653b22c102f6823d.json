{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\Fetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nconst Fetch = () => {\n  _s();\n\n  const defaulJokeValue = 10;\n  const [maara, setMaara] = useState(defaulJokeValue);\n  const [faktat, setFaktat] = useState([]);\n  const [jokeCounter, setCount] = useState(maara);\n  const tempArray = [];\n  const [etunimi, setEtunnimi] = useState(\"\");\n  const [sukunimi, setSukunimi] = useState(\"\");\n  const firstname = \"\";\n\n  const lataa_faktat = () => {\n    let base_url = \"http://api.icndb.com/\";\n    let lastPArt = `jokes/random/${maara}?firstName=${etunimi}&lastName=${sukunimi}&limitTo=[explicit]`;\n    let id = `jokes/23`;\n    console.log(lastPArt);\n    fetch(base_url + lastPArt).then(resp => {\n      return resp.json();\n    }).then(json => {\n      console.log(json.value);\n      setFaktat(json.value);\n    });\n  };\n\n  const validateValue = e => {\n    if (e >= 1 && e <= 10) {\n      setCount(jokeCounter => jokeCounter + parseInt(e));\n      setMaara(e);\n      console.log(jokeCounter);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"vitsit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"jutut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), console.log(etunimi + \" \" + sukunimi), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        padding: 20\n      },\n      onClick: () => lataa_faktat(),\n      children: \"Fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 20\n      },\n      type: \"number\",\n      name: \"quantity\",\n      value: maara,\n      onChange: e => validateValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 20\n      },\n      type: \"text\",\n      placeholder: \"etunimi\",\n      value: etunimi,\n      onChange: etunimi = value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 20\n      },\n      type: \"text\",\n      placeholder: \"sukunimi\",\n      value: sukunimi,\n      onChange: e => setSukunimi(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Fetch, \"FlVysmS+7Ait/e/wrS24V2cKoTU=\");\n\n_c = Fetch;\nexport default Fetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/Fetch.js"],"names":["React","useEffect","useState","Fetch","defaulJokeValue","maara","setMaara","faktat","setFaktat","jokeCounter","setCount","tempArray","etunimi","setEtunnimi","sukunimi","setSukunimi","firstname","lataa_faktat","base_url","lastPArt","id","console","log","fetch","then","resp","json","value","validateValue","e","parseInt","padding","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Fetch = () => {\r\n  const defaulJokeValue = 10;\r\n  const [maara, setMaara] = useState(defaulJokeValue);\r\n  const [faktat, setFaktat] = useState([]);\r\n  const [jokeCounter, setCount] = useState(maara)\r\n  const tempArray = [];\r\n  const [etunimi, setEtunnimi] = useState(\"\")\r\n  const [sukunimi, setSukunimi] = useState(\"\")\r\n  const firstname = \"\";\r\n  const lataa_faktat = () => {\r\n\r\n    let base_url = \"http://api.icndb.com/\"\r\n    let lastPArt = `jokes/random/${maara}?firstName=${etunimi}&lastName=${sukunimi}&limitTo=[explicit]`\r\n    let id = `jokes/23`\r\n    console.log(lastPArt)\r\n    fetch(base_url + lastPArt)\r\n      .then((resp) => {\r\n        return resp.json();\r\n      })\r\n      .then((json) => {\r\n        console.log(json.value)\r\n        setFaktat(json.value);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const validateValue = (e) => {\r\n    if (e >= 1 && e <= 10) {\r\n      setCount(jokeCounter => jokeCounter + parseInt(e))\r\n      setMaara(e)\r\n\r\n      console.log(jokeCounter)\r\n\r\n    }\r\n  }\r\n\r\n\r\n  \r\nreturn (\r\n  <div style={{padding:20}}>\r\n    <select style={{padding:20}}>\r\n      <option>vitsit</option>\r\n      <option>jutut</option>\r\n    </select>\r\n    {console.log(etunimi+\" \" + sukunimi)}\r\n    <button style={{padding:20}} onClick={() => lataa_faktat()}>Fetch</button>\r\n    <input style={{padding:20}} type=\"number\" name=\"quantity\" value={maara} onChange={e => validateValue(e.target.value)} />\r\n    <input style={{padding:20}} type=\"text\" placeholder=\"etunimi\" value={etunimi} onChange={etunimi = value}  ></input>\r\n    <input style={{padding:20}} type=\"text\" placeholder=\"sukunimi\" value={sukunimi} onChange={e => setSukunimi(e.target.value)}  ></input>\r\n  </div>\r\n\r\n);\r\n}\r\n\r\nexport default Fetch;\r\n"]},"metadata":{},"sourceType":"module"}