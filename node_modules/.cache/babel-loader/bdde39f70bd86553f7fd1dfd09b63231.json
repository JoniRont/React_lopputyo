{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\PrintJokes.js\",\n    _s = $RefreshSig$();\n\nimport { StoreContext } from \"./storeContext\";\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\nimport './PrintJokes.css';\n/**\r\n * eka count päivitys on ehdollistettu\r\n * koska count value on alussa (1), jota en tietenkään halunnut\r\n * varmaan olis löytyny joku järkevämpikin tapa tehdä tää\r\n */\n\nconst PrintJokes = () => {\n  _s();\n\n  const [store, setStore] = useContext(StoreContext);\n  const [count, setCount] = useState(0);\n  const j = Object.values(store);\n  const y = Object.entries(store);\n  const [firstUpdate, setFirstUpdate] = useState(true);\n  useEffect(() => {\n    if (firstUpdate) {\n      setFirstUpdate(false);\n    } else {\n      setCount(+j.length + +count);\n    }\n  }, [store]);\n\n  const print = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: j.map((element, i, y) => {\n        console.log(element.items);\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"jokes\",\n          children: [i + 1, \". \", element.joke, \"\\n\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"counter\",\n      children: \"Vitsejä näytetty yhteensä: \" + count + \" kpl.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), count === 0 ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      alt: \"emptyList\",\n      children: \"Ei vitsejä näytettäväksi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this) : print()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrintJokes, \"F8Q2ibkJhQ8wgVVWvfDaOP0jefQ=\");\n\n_c = PrintJokes;\nexport default PrintJokes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintJokes\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/PrintJokes.js"],"names":["StoreContext","React","useEffect","useContext","useState","useRef","PrintJokes","store","setStore","count","setCount","j","Object","values","y","entries","firstUpdate","setFirstUpdate","length","print","map","element","i","console","log","items","joke"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,OAAO,kBAAP;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,UAAU,CAACH,YAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMO,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAV;AACA,QAAMO,CAAC,GAAGF,MAAM,CAACG,OAAP,CAAeR,KAAf,CAAV;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,IAAD,CAA9C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,WAAJ,EAAiB;AACfC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAFD,MAGK;AACHP,MAAAA,QAAQ,CAAE,CAACC,CAAC,CAACO,MAAH,GAAY,CAACT,KAAf,CAAR;AACD;AACF,GAPQ,EAON,CAACF,KAAD,CAPM,CAAT;;AAQA,QAAMY,KAAK,GAAG,MAAM;AAClB,wBACE;AAAA,gBAEIR,CAAC,CAACS,GAAF,CAAM,CAACC,OAAD,EAAUC,CAAV,EAAaR,CAAb,KAAmB;AACvBS,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,KAApB;AACA,4BAAO;AAAG,UAAA,SAAS,EAAC,OAAb;AAAA,qBAA8BH,CAAC,GAAG,CAAlC,EAAqC,IAArC,EAA2CD,OAAO,CAACK,IAAnD,EAAyD,IAAzD;AAAA,WAA0BJ,CAA1B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAHD;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXD;;AAaA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA,gBAAyB,gCAA8Bb,KAA9B,GAAoC;AAA7D;AAAA;AAAA;AAAA;AAAA,YADF,EAGGA,KAAK,KAAK,CAAX,gBAAiB;AAAI,MAAA,GAAG,EAAC,WAAR;AAAA,gBAAqB;AAArB;AAAA;AAAA;AAAA;AAAA,YAAjB,GAAyEU,KAAK,EAHhF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAtCD;;GAAMb,U;;KAAAA,U;AAuCN,eAAeA,UAAf","sourcesContent":["import { StoreContext } from \"./storeContext\";\r\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\r\nimport './PrintJokes.css';\r\n/**\r\n * eka count päivitys on ehdollistettu\r\n * koska count value on alussa (1), jota en tietenkään halunnut\r\n * varmaan olis löytyny joku järkevämpikin tapa tehdä tää\r\n */\r\n\r\nconst PrintJokes = () => {\r\n  const [store, setStore] = useContext(StoreContext);\r\n  const [count, setCount] = useState(0);\r\n  const j = Object.values(store);\r\n  const y = Object.entries(store)\r\n  const [firstUpdate, setFirstUpdate] = useState(true)\r\n  \r\n  useEffect(() => {\r\n    if (firstUpdate) {\r\n      setFirstUpdate(false)\r\n    }\r\n    else {\r\n      setCount((+j.length + +count))\r\n    }\r\n  }, [store])\r\n  const print = () => {\r\n    return (\r\n      <div>\r\n        {\r\n          j.map((element, i, y) => {\r\n            console.log(element.items)\r\n            return <p className=\"jokes\" key={i}>{i + 1}{\". \"}{element.joke}{\"\\n\"}</p>\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"counter\">{\"Vitsejä näytetty yhteensä: \"+count+\" kpl.\"}</h3>\r\n      {\r\n      (count === 0) ?  <h2 alt=\"emptyList\">{\"Ei vitsejä näytettäväksi\"}</h2> : print() \r\n      }\r\n      \r\n\r\n    </div>\r\n  )\r\n}\r\nexport default PrintJokes;"]},"metadata":{},"sourceType":"module"}