{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\PrintJokes.js\",\n    _s = $RefreshSig$();\n\nimport { StoreContext } from \"./storeContext\";\nimport React, { useEffect, useContext, useState } from \"react\";\n\nconst PrintJokes = () => {\n  _s();\n\n  const [store, setStore] = useContext(StoreContext);\n  const [count, setCount] = useState({\n    store\n  });\n  const j = Object.values(store);\n  let counterValue = 0;\n  useEffect(() => {\n    console.log(\"st  \" + store.length); //hae kategoriat jsonilla\n\n    setCount(+store.length + +count);\n    console.log(\"c \" + count);\n  }, [store]);\n  {//console.log({store})\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"green\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"vitsit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), console.log(\"store ++++++\" + j.count), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"p\\xF6\\xF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), j.map((element, i) => {\n      //console.log(i)\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [i + 1, \". \", element[\"joke\"], \" ---------------ja kategory on testissä   \", element[\"categories\"], \"\\n\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"p\\xF6\\xF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count.count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), console.log(count)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrintJokes, \"ZVuHkpcfbJ9hdy25efp9/TyPLvs=\");\n\n_c = PrintJokes;\nexport default PrintJokes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintJokes\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/PrintJokes.js"],"names":["StoreContext","React","useEffect","useContext","useState","PrintJokes","store","setStore","count","setCount","j","Object","values","counterValue","console","log","length","backgroundColor","map","element","i"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;;AAGA,MAAMC,UAAU,GAAG,MAAK;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,UAAU,CAACH,YAAD,CAApC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAACE,IAAAA;AAAD,GAAD,CAAlC;AACA,QAAMI,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAV;AACA,MAAIO,YAAY,GAAG,CAAnB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAOT,KAAK,CAACU,MAAzB,EADc,CAEd;;AAGAP,IAAAA,QAAQ,CAAE,CAACH,KAAK,CAACU,MAAP,GAAgB,CAACR,KAAnB,CAAR;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAKP,KAAjB;AAED,GARQ,EAQN,CAACF,KAAD,CARM,CAAT;AAUA,GACE;AACD;AACD,sBACE;AAAK,IAAA,KAAK,EAAE;AAACW,MAAAA,eAAe,EAAC;AAAjB,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,OAAO,CAACC,GAAR,CAAY,iBAAeL,CAAC,CAACF,KAA7B,CAFH,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAIKE,CAAC,CAACQ,GAAF,CAAM,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACnB;AAEA,0BAAO;AAAA,mBAAaA,CAAC,GAAG,CAAjB,EAAoB,IAApB,EAA0BD,OAAO,CAAC,MAAD,CAAjC,EAA2C,4CAA3C,EAAyFA,OAAO,CAAC,YAAD,CAAhG,EAAgH,IAAhH;AAAA,SAASC,CAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAJF,CAJL,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAA,gBAAKZ,KAAK,CAACA;AAAX;AAAA;AAAA;AAAA;AAAA,YAbF,EAcGM,OAAO,CAACC,GAAR,CAAYP,KAAZ,CAdH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArCD;;GAAMH,U;;KAAAA,U;AAsCN,eAAeA,UAAf","sourcesContent":["import { StoreContext } from \"./storeContext\";\r\nimport React, { useEffect, useContext, useState } from \"react\";\r\n\r\n\r\nconst PrintJokes = () =>{\r\n  const [store, setStore] = useContext(StoreContext);\r\n  const [count, setCount] = useState({store});\r\n  const j = Object.values(store);\r\n  let counterValue = 0;\r\n \r\n  useEffect(() => {\r\n    console.log(\"st  \"+store.length)\r\n    //hae kategoriat jsonilla\r\n    \r\n    \r\n    setCount((+store.length + +count))\r\n    console.log(\"c \"+count)\r\n    \r\n  }, [store]);\r\n  \r\n  {\r\n    //console.log({store})\r\n  }\r\n  return(\r\n    <div style={{backgroundColor:\"green\"  }}>\r\n      <h3>vitsit</h3>\r\n      {console.log(\"store ++++++\"+j.count)}\r\n      <p>pöö</p>\r\n        {j.map((element, i) => {\r\n            //console.log(i)\r\n            \r\n            return <li key={i}>{i + 1}{\". \"}{element[\"joke\"]}{\" ---------------ja kategory on testissä   \"}{element[\"categories\"]}{\"\\n\"}</li>\r\n          })\r\n          \r\n        }\r\n\r\n      <p>pöö</p>\r\n      <h2>{count.count}</h2>\r\n      {console.log(count)}\r\n    </div>\r\n  )\r\n}\r\nexport default PrintJokes;"]},"metadata":{},"sourceType":"module"}