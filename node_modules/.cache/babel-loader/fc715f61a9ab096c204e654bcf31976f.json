{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\Fetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from 'react';\nconst JokeList = /*#__PURE__*/createContext([]);\n\nconst Fetch = () => {\n  _s();\n\n  const defaulJokeValue = 10;\n  const [maara, setMaara] = useState(defaulJokeValue);\n  const [vitsit, setvitsit] = useState([]);\n  const [jokeCounter, setCount] = useState(maara);\n  const [valittukategoria, setValittukategoria] = useState(\"kaikki\", \"explicit\", \"nerdy\");\n  const [etunimi, setEtunnimi] = useState(\"\");\n  const [sukunimi, setSukunimi] = useState(\"\");\n  const [kategoriat, setKategoriat] = useState([]);\n  const JokeList = /*#__PURE__*/createContext([]);\n  useEffect(() => {\n    //hae kategoriat jsonilla\n    setKategoriat([\"kaikki\", \"explicit\", \"nerdy\"]);\n  }, []);\n\n  const lataa_vitsit = () => {\n    let base_url = \"http://api.icndb.com/\";\n    let lastPArt = `jokes/random/${maara}?firstName=${etunimi}&lastName=${sukunimi}`;\n    console.log(\"VAlittu kategoria----- \" + valittukategoria);\n    let limitcat = `&limitTo=[${valittukategoria}]`;\n    let id = `jokes/23`;\n    let finalUrl = base_url + lastPArt;\n\n    if (valittukategoria == \"kaikki\") {\n      finalUrl = base_url + lastPArt;\n    } else {\n      finalUrl = base_url + lastPArt + limitcat;\n    }\n\n    console.log(\"Haku urli\" + finalUrl);\n    fetch(finalUrl).then(resp => {\n      return resp.json();\n    }).then(json => {\n      //console.log(json)\n      setvitsit(json.value);\n    });\n  };\n\n  const validateValue = e => {\n    if (e >= 1 && e <= 10) {\n      setCount(jokeCounter => jokeCounter + parseInt(e));\n      setMaara(e); //console.log(jokeCounter)\n    }\n  };\n\n  const kat = e => {\n    setValittukategoria(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20,\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(JokeList.Provider, {\n      value: [joke],\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      onChange: e => kat(e.target.value),\n      children: kategoriat.map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 110\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      type: \"number\",\n      name: \"quantity\",\n      value: maara,\n      onChange: e => validateValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      type: \"text\",\n      placeholder: \"etunimi\",\n      value: etunimi,\n      onChange: e => setEtunnimi(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      type: \"text\",\n      placeholder: \"sukunimi\",\n      value: sukunimi,\n      onChange: e => setSukunimi(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        padding: 10,\n        margin: 20\n      },\n      onClick: () => lataa_vitsit(),\n      children: \"Fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: valittukategoria\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), console.log(vitsit), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"vitsit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(vitsit.keys, [\"joke\"], 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), vitsit.map((element, i) => {\n        //console.log(element[\"joke\"])\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [i + 1, \". \", element[\"joke\"], \" ---------------ja kategory on testiss√§   \", element[\"categories\"], \"\\n\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 20\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Vitsej\\xE4 on haettu kaikkiaan: \", jokeCounter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Fetch, \"DeuDsiq0WFdR/VQdTbUfiSkkZcA=\");\n\n_c = Fetch;\nexport default Fetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/Fetch.js"],"names":["React","createContext","useEffect","useState","JokeList","Fetch","defaulJokeValue","maara","setMaara","vitsit","setvitsit","jokeCounter","setCount","valittukategoria","setValittukategoria","etunimi","setEtunnimi","sukunimi","setSukunimi","kategoriat","setKategoriat","lataa_vitsit","base_url","lastPArt","console","log","limitcat","id","finalUrl","fetch","then","resp","json","value","validateValue","e","parseInt","kat","padding","margin","joke","children","target","map","x","JSON","stringify","keys","element","i"],"mappings":"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","sourcesContent":["import React, { createContext, useEffect, useState } from 'react'\r\nconst JokeList = createContext([])\r\nconst Fetch = () => {\r\n  const defaulJokeValue = 10;\r\n  const [maara, setMaara] = useState(defaulJokeValue);\r\n  const [vitsit, setvitsit] = useState([]);\r\n  const [jokeCounter, setCount] = useState(maara)\r\n  const [valittukategoria, setValittukategoria] = useState(\"kaikki\", \"explicit\", \"nerdy\")\r\n  const [etunimi, setEtunnimi] = useState(\"\")\r\n  const [sukunimi, setSukunimi] = useState(\"\")\r\n  const [kategoriat, setKategoriat] = useState([])\r\n  const JokeList = createContext([])\r\n  useEffect(() => {\r\n    //hae kategoriat jsonilla\r\n\r\n    setKategoriat([\"kaikki\", \"explicit\", \"nerdy\"])\r\n\r\n  }, []);\r\n\r\n  const lataa_vitsit = () => {\r\n\r\n    let base_url = \"http://api.icndb.com/\"\r\n    let lastPArt = `jokes/random/${maara}?firstName=${etunimi}&lastName=${sukunimi}`\r\n    console.log(\"VAlittu kategoria----- \" + valittukategoria)\r\n    let limitcat = `&limitTo=[${valittukategoria}]`\r\n    let id = `jokes/23`\r\n    let finalUrl = base_url + lastPArt\r\n\r\n    if (valittukategoria == \"kaikki\") {\r\n      finalUrl = base_url + lastPArt\r\n    }\r\n    else {\r\n      finalUrl = base_url + lastPArt + limitcat\r\n    }\r\n    console.log(\"Haku urli\" + finalUrl)\r\n    fetch(finalUrl)\r\n      .then((resp) => {\r\n        return resp.json();\r\n      })\r\n      .then((json) => {\r\n        //console.log(json)\r\n        setvitsit(json.value);\r\n\r\n      });\r\n  };\r\n\r\n\r\n\r\n  const validateValue = (e) => {\r\n    if (e >= 1 && e <= 10) {\r\n      setCount(jokeCounter => jokeCounter + parseInt(e))\r\n      setMaara(e)\r\n      //console.log(jokeCounter)\r\n    }\r\n  }\r\n  const kat = (e) => {\r\n\r\n    setValittukategoria(e)\r\n  }\r\n\r\n  return (\r\n\r\n    <div style={{ padding: 20, margin: 20 }}>\r\n      <JokeList.Provider value={[joke]}>\r\n        {children}\r\n      </JokeList.Provider>\r\n      <select style={{ padding: 10, margin: 20 }} onChange={e => kat(e.target.value)}>{kategoriat.map((x) => <option>{x}</option>)}</select>;\r\n\r\n      {\r\n        //<select onChange={e=> kat(e.target.value)}>{kategoriat.map((x) => <option>{x}</option>)}</select>;\r\n        //console.log(etunimi+\" \" + sukunimi)\r\n      }\r\n      {\r\n        //console.log(\"kategoriat\"+kategoriat)\r\n      }\r\n\r\n      <input style={{ padding: 10, margin: 20 }} type=\"number\" name=\"quantity\" value={maara} onChange={e => validateValue(e.target.value)} />\r\n      <input style={{ padding: 10, margin: 20 }} type=\"text\" placeholder=\"etunimi\" value={etunimi} onChange={e => setEtunnimi(e.target.value)}  ></input>\r\n      <input style={{ padding: 10, margin: 20 }} type=\"text\" placeholder=\"sukunimi\" value={sukunimi} onChange={e => setSukunimi(e.target.value)}  ></input>\r\n      <button style={{ padding: 10, margin: 20 }} onClick={() => lataa_vitsit()}>Fetch</button>\r\n      <p>{valittukategoria}</p>\r\n      {\r\n        console.log(vitsit)\r\n      }\r\n\r\n      <div>\r\n        <h3>vitsit</h3>\r\n\r\n        <p>{JSON.stringify(vitsit.keys, [\"joke\"], 1)}</p>\r\n\r\n        {\r\n\r\n\r\n          //console.log(vitsit[0][\"joke\"])\r\n        }\r\n        {\r\n          vitsit.map((element, i) => {\r\n            //console.log(element[\"joke\"])\r\n            return <li key={i}>{i + 1}{\". \"}{element[\"joke\"]}{\" ---------------ja kategory on testiss√§   \"}{element[\"categories\"]}{\"\\n\"}</li>\r\n          })\r\n        }\r\n        <p>Vitsej√§ on haettu kaikkiaan: {jokeCounter}</p>\r\n      </div>\r\n      \r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Fetch;\r\n"]},"metadata":{},"sourceType":"module"}