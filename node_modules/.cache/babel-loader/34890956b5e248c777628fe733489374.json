{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\PrintJokes.js\",\n    _s = $RefreshSig$();\n\nimport { StoreContext } from \"./storeContext\";\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\n\nconst PrintJokes = () => {\n  _s();\n\n  const [store, setStore] = useContext(StoreContext);\n  const [count, setCount] = useState(0);\n  const j = Object.values(store);\n  const firstUpdate = useRef(true);\n  useEffect(() => {\n    if (firstUpdate) {\n      firstUpdate.current = fale;\n    } else {\n      setCount(+j.length + +count);\n    }\n  }, [store]);\n  {\n    /*\r\n     useEffect(() => {\r\n       console.log(\"st  \"+store.length)\r\n       //hae kategoriat jsonilla\r\n       console.log(\"j length \"+j.length)\r\n       console.log(\"count \"+count)\r\n       let temp = count;\r\n       setCount((+j.length + +temp))\r\n     \r\n     }, [store]);\r\n     */\n  }\n  {//console.log({store})\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"green\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"vitsit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), ( //hae kategoriat jsonilla\n    console.log(\"st  \" + store.length), console.log(\"c \" + j.length)), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"p\\xF6\\xF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), j.map((element, i) => {\n      //console.log(i)\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [i + 1, \". \", element[\"joke\"], \" ---------------ja kategory on testissä   \", element[\"categories\"], \"\\n\"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"p\\xF6\\xF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrintJokes, \"+Kxmms2DNDXJvGf2ClnYzCBNByU=\");\n\n_c = PrintJokes;\nexport default PrintJokes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintJokes\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/PrintJokes.js"],"names":["StoreContext","React","useEffect","useContext","useState","useRef","PrintJokes","store","setStore","count","setCount","j","Object","values","firstUpdate","current","fale","length","backgroundColor","console","log","map","element","i"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,OAA/D;;AAGA,MAAMC,UAAU,GAAG,MAAK;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,UAAU,CAACH,YAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMO,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAV;AACA,QAAMO,WAAW,GAAGT,MAAM,CAAC,IAAD,CAA1B;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,WAAJ,EAAgB;AACdA,MAAAA,WAAW,CAACC,OAAZ,GAAoBC,IAApB;AACD,KAFD,MAGI;AACFN,MAAAA,QAAQ,CAAE,CAACC,CAAC,CAACM,MAAH,GAAY,CAACR,KAAf,CAAR;AACD;AACF,GAPQ,EAON,CAACF,KAAD,CAPM,CAAT;AAQF;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACC,GACE;AACD;AACD,sBACE;AAAK,IAAA,KAAK,EAAE;AAACW,MAAAA,eAAe,EAAC;AAAjB,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,IAEG;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAOb,KAAK,CAACU,MAAzB,GAEAE,OAAO,CAACC,GAAR,CAAY,OAAKT,CAAC,CAACM,MAAnB,CALF,gBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAOKN,CAAC,CAACU,GAAF,CAAM,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACnB;AAEA,0BAAO;AAAA,mBAAaA,CAAC,GAAG,CAAjB,EAAoB,IAApB,EAA0BD,OAAO,CAAC,MAAD,CAAjC,EAA2C,4CAA3C,EAAyFA,OAAO,CAAC,YAAD,CAAhG,EAAgH,IAAhH;AAAA,SAASC,CAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAJF,CAPL,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE;AAAA,gBAAKd;AAAL;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CApDD;;GAAMH,U;;KAAAA,U;AAqDN,eAAeA,UAAf","sourcesContent":["import { StoreContext } from \"./storeContext\";\r\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\r\n\r\n\r\nconst PrintJokes = () =>{\r\n  const [store, setStore] = useContext(StoreContext);\r\n  const [count, setCount] = useState(0);\r\n  const j = Object.values(store);\r\n  const firstUpdate = useRef(true);\r\n  \r\n\r\n  \r\n  useEffect(() => {\r\n    if (firstUpdate){\r\n      firstUpdate.current=fale\r\n    } \r\n    else{\r\n      setCount((+j.length + +count))\r\n    }\r\n  }, [store])\r\n{/*\r\n  useEffect(() => {\r\n    console.log(\"st  \"+store.length)\r\n    //hae kategoriat jsonilla\r\n    console.log(\"j length \"+j.length)\r\n    console.log(\"count \"+count)\r\n    let temp = count;\r\n    setCount((+j.length + +temp))\r\n  \r\n  }, [store]);\r\n  */\r\n}\r\n  {\r\n    //console.log({store})\r\n  }\r\n  return(\r\n    <div style={{backgroundColor:\"green\"  }}>\r\n      <h3>vitsit</h3>\r\n      {//hae kategoriat jsonilla\r\n      console.log(\"st  \"+store.length),\r\n    \r\n      console.log(\"c \"+j.length)}\r\n      <p>pöö</p>\r\n        {j.map((element, i) => {\r\n            //console.log(i)\r\n            \r\n            return <li key={i}>{i + 1}{\". \"}{element[\"joke\"]}{\" ---------------ja kategory on testissä   \"}{element[\"categories\"]}{\"\\n\"}</li>\r\n          })\r\n          \r\n        }\r\n\r\n      <p>pöö</p>\r\n      <h2>{count}</h2>\r\n      \r\n    </div>\r\n  )\r\n}\r\nexport default PrintJokes;"]},"metadata":{},"sourceType":"module"}