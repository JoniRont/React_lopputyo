{"ast":null,"code":"import _slicedToArray from\"C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{StoreContext}from\"./storeContext\";import React,{useEffect,useContext,useState}from\"react\";import'./PrintJokes.css';/**\r\n * Tulostetaan useContextista saatu lista \r\n * eka count päivitys on ehdollistettu\r\n * koska count value on alussa (1), jota en tietenkään halunnut\r\n * varmaan olis löytyny joku järkevämpikin tapa tehdä tää\r\n */var PrintJokes=function PrintJokes(){var _useContext=useContext(StoreContext),_useContext2=_slicedToArray(_useContext,2),store=_useContext2[0],setStore=_useContext2[1];var _useState=useState(0),_useState2=_slicedToArray(_useState,2),count=_useState2[0],setCount=_useState2[1];var j=Object.values(store);var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),firstUpdate=_useState4[0],setFirstUpdate=_useState4[1];useEffect(function(){if(firstUpdate){setFirstUpdate(false);}else{setCount(+j.length+ +count);}},[store]);var print=function print(){return/*#__PURE__*/_jsx(\"div\",{children:j.map(function(element,i,y){return/*#__PURE__*/_jsxs(\"p\",{className:\"jokes\",children:[i+1,\". \",element.joke,\"\\n\"]},i);})});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"counter\",children:\"Vitsejä näytetty yhteensä: \"+count+\" kpl.\"}),count===0?/*#__PURE__*/_jsx(\"h2\",{alt:\"emptyList\",children:\"Ei vitsejä näytettäväksi\"}):print()]});};export default PrintJokes;","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/PrintJokes.js"],"names":["StoreContext","React","useEffect","useContext","useState","PrintJokes","store","setStore","count","setCount","j","Object","values","firstUpdate","setFirstUpdate","length","print","map","element","i","y","joke"],"mappings":"sQAAA,OAASA,YAAT,KAA6B,gBAA7B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,UAA3B,CAAuCC,QAAvC,KAAsD,OAAtD,CACA,MAAO,kBAAP,CACA;AACA;AACA;AACA;AACA;AACA,GAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,iBACGF,UAAU,CAACH,YAAD,CADb,4CAChBM,KADgB,iBACTC,QADS,+BAEGH,QAAQ,CAAC,CAAD,CAFX,wCAEhBI,KAFgB,eAETC,QAFS,eAGvB,GAAMC,CAAAA,CAAC,CAAGC,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAV,CAHuB,eAIeF,QAAQ,CAAC,IAAD,CAJvB,yCAIhBS,WAJgB,eAIHC,cAJG,eAMvBZ,SAAS,CAAC,UAAM,CACd,GAAIW,WAAJ,CAAiB,CACfC,cAAc,CAAC,KAAD,CAAd,CACD,CAFD,IAGK,CACHL,QAAQ,CAAE,CAACC,CAAC,CAACK,MAAH,CAAY,EAACP,KAAf,CAAR,CACD,CACF,CAPQ,CAON,CAACF,KAAD,CAPM,CAAT,CAQA,GAAMU,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,mBACE,qBAEIN,CAAC,CAACO,GAAF,CAAM,SAACC,OAAD,CAAUC,CAAV,CAAaC,CAAb,CAAmB,CACvB,mBAAO,WAAG,SAAS,CAAC,OAAb,WAA8BD,CAAC,CAAG,CAAlC,CAAqC,IAArC,CAA2CD,OAAO,CAACG,IAAnD,CAAyD,IAAzD,GAA0BF,CAA1B,CAAP,CACD,CAFD,CAFJ,EADF,CASD,CAVD,CAYA,mBACE,oCACE,WAAI,SAAS,CAAC,SAAd,UAAyB,8BAA8BX,KAA9B,CAAoC,OAA7D,EADF,CAGKA,KAAK,GAAK,CAAX,cAAiB,WAAI,GAAG,CAAC,WAAR,UAAqB,0BAArB,EAAjB,CAAyEQ,KAAK,EAHlF,GADF,CAQD,CAlCD,CAmCA,cAAeX,CAAAA,UAAf","sourcesContent":["import { StoreContext } from \"./storeContext\";\r\nimport React, { useEffect, useContext, useState} from \"react\";\r\nimport './PrintJokes.css';\r\n/**\r\n * Tulostetaan useContextista saatu lista \r\n * eka count päivitys on ehdollistettu\r\n * koska count value on alussa (1), jota en tietenkään halunnut\r\n * varmaan olis löytyny joku järkevämpikin tapa tehdä tää\r\n */\r\n\r\nconst PrintJokes = () => {\r\n  const [store, setStore] = useContext(StoreContext);\r\n  const [count, setCount] = useState(0);\r\n  const j = Object.values(store);\r\n  const [firstUpdate, setFirstUpdate] = useState(true)\r\n  \r\n  useEffect(() => {\r\n    if (firstUpdate) {\r\n      setFirstUpdate(false)\r\n    }\r\n    else {\r\n      setCount((+j.length + +count))\r\n    }\r\n  }, [store])\r\n  const print = () => {\r\n    return (\r\n      <div>\r\n        {\r\n          j.map((element, i, y) => {\r\n            return <p className=\"jokes\" key={i}>{i + 1}{\". \"}{element.joke}{\"\\n\"}</p>\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"counter\">{\"Vitsejä näytetty yhteensä: \"+count+\" kpl.\"}</h3>\r\n      {\r\n        (count === 0) ?  <h2 alt=\"emptyList\">{\"Ei vitsejä näytettäväksi\"}</h2> : print() \r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default PrintJokes;"]},"metadata":{},"sourceType":"module"}