{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\PrintJokes.js\",\n    _s = $RefreshSig$();\n\nimport { StoreContext } from \"./storeContext\";\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\n\nconst PrintJokes = () => {\n  _s();\n\n  const [store, setStore] = useContext(StoreContext);\n  const [count, setCount] = useState(0);\n  const j = Object.values(store);\n  const [firstUpdate, setFirstUpdate] = useState(true);\n  useEffect(() => {\n    if (firstUpdate) {\n      setFirstUpdate(false);\n    } else {\n      setCount(+j.length + +count);\n    }\n  }, [store]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"green\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"vitsit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"p\\xF6\\xF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), j.map((element, i) => {\n      console.log(i);\n\n      if (!firstUpdate) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [i + 1, \". \", element[\"joke\"], \" ---------------ja kategory on testissä   \", element[\"categories\"], \"\\n\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ei yhtään vitsiä\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, this);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"p\\xF6\\xF6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrintJokes, \"F8Q2ibkJhQ8wgVVWvfDaOP0jefQ=\");\n\n_c = PrintJokes;\nexport default PrintJokes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintJokes\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/PrintJokes.js"],"names":["StoreContext","React","useEffect","useContext","useState","useRef","PrintJokes","store","setStore","count","setCount","j","Object","values","firstUpdate","setFirstUpdate","length","backgroundColor","map","element","i","console","log"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,OAA/D;;AAGA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,UAAU,CAACH,YAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMO,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAV;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,IAAD,CAA9C;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,WAAJ,EAAiB;AACfC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAFD,MAGK;AACHL,MAAAA,QAAQ,CAAE,CAACC,CAAC,CAACK,MAAH,GAAY,CAACP,KAAf,CAAR;AACD;AACF,GAPQ,EAON,CAACF,KAAD,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,eAAe,EAAE;AAAnB,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAOGN,CAAC,CAACO,GAAF,CAAM,CAACC,OAAD,EAAUC,CAAV,KAAgB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,UAAG,CAACN,WAAJ,EAAgB;AAEd,4BAAO;AAAA,qBAAaM,CAAC,GAAG,CAAjB,EAAoB,IAApB,EAA0BD,OAAO,CAAC,MAAD,CAAjC,EAA2C,4CAA3C,EAAyFA,OAAO,CAAC,YAAD,CAAhG,EAAgH,IAAhH;AAAA,WAASC,CAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AAED,OAJD,MAKI;AACF,4BAAO;AAAA,oBAAK;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF,KAVA,CAPH,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE;AAAA,gBAAKX;AAAL;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA3CD;;GAAMH,U;;KAAAA,U;AA4CN,eAAeA,UAAf","sourcesContent":["import { StoreContext } from \"./storeContext\";\r\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\r\n\r\n\r\nconst PrintJokes = () => {\r\n  const [store, setStore] = useContext(StoreContext);\r\n  const [count, setCount] = useState(0);\r\n  const j = Object.values(store);\r\n  const [firstUpdate, setFirstUpdate] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n    if (firstUpdate) {\r\n      setFirstUpdate(false)\r\n    }\r\n    else {\r\n      setCount((+j.length + +count))\r\n    }\r\n  }, [store])\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"green\" }}>\r\n      <h3>vitsit</h3>\r\n      {\r\n        //hae kategoriat jsonilla\r\n\r\n      }\r\n      <p>pöö</p>\r\n      {j.map((element, i) => {\r\n        console.log(i)\r\n        if(!firstUpdate){\r\n          \r\n          return <li key={i}>{i + 1}{\". \"}{element[\"joke\"]}{\" ---------------ja kategory on testissä   \"}{element[\"categories\"]}{\"\\n\"}</li>\r\n\r\n        }\r\n        else{\r\n          return <h3>{\"Ei yhtään vitsiä\"}</h3>\r\n        }\r\n      })\r\n\r\n      }\r\n\r\n      <p>pöö</p>\r\n      <h2>{count}</h2>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default PrintJokes;"]},"metadata":{},"sourceType":"module"}