{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\Fetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StoreContext } from \"./storeContext\";\nimport './Fetch.css';\n/**\r\n * toivottavasti muistin siistiä koodia ja jos en niin sori\r\n * kategoriat on tehty kovakoodauksella mikäli en muistanut/jaksanut hakea niitä\r\n */\n\nconst Fetch = () => {\n  _s();\n\n  const defaultJokeValue = 10;\n  const [maara, setMaara] = useState(defaultJokeValue);\n  const [valittukategoria, setValittukategoria] = useState(\"kaikki\", \"explicit\", \"nerdy\");\n  const [etunimi, setEtunnimi] = useState(\"Chuck\");\n  const [sukunimi, setSukunimi] = useState(\"Norris\");\n  const [kategoriat, setKategoriat] = useState([]);\n  const [store, setStore] = useContext(StoreContext);\n  useEffect(() => {\n    setKategoriat([\"kaikki kategoriat\", \"explicit\", \"nerdy\"]);\n  }, []);\n\n  const lataa_vitsit = () => {\n    let base_url = \"http://api.icndb.com/\";\n    let lastPArt = `jokes/random/${maara}?firstName=${etunimi}&lastName=${sukunimi}&escape=javascript`;\n    let limitcat = `&limitTo=[${valittukategoria}]`;\n    let finalUrl = base_url + lastPArt;\n\n    if (valittukategoria === \"kaikki\") {\n      finalUrl = base_url + lastPArt;\n    } else {\n      finalUrl = base_url + lastPArt + limitcat;\n    }\n\n    fetch(finalUrl).then(resp => {\n      return resp.json();\n    }).then(json => {\n      //console.log(json.value)\n      //setvitsit(json.value);\n      setStore(json.value);\n    });\n  };\n\n  const validateValue = e => {\n    if (e >= 1 && e <= 10) {\n      //setCount(jokeCounter => jokeCounter + parseInt(e))\n      setMaara(e);\n    }\n  };\n\n  const kat = e => {\n    setValittukategoria(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jokeBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labels\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Kategoriat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sel\",\n        onChange: e => kat(e.target.value),\n        children: kategoriat.map((x, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          className: \"sel\",\n          children: x\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 97\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labels\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Vitsien m\\xE4\\xE4r\\xE4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        alt: \"maara\",\n        name: \"quantity\",\n        value: maara,\n        onChange: e => validateValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labels\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Etunimi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"etunimi\",\n        value: etunimi,\n        onChange: e => setEtunnimi(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labels\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Sukunimi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"sukunimi\",\n        value: sukunimi,\n        onChange: e => setSukunimi(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"labels\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => lataa_vitsit(),\n        children: \"Hae vitsit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Fetch, \"/GHApc7lUFzQ3fIFJvfw5pSsDOQ=\");\n\n_c = Fetch;\nexport default Fetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/Fetch.js"],"names":["React","useEffect","useState","useContext","StoreContext","Fetch","defaultJokeValue","maara","setMaara","valittukategoria","setValittukategoria","etunimi","setEtunnimi","sukunimi","setSukunimi","kategoriat","setKategoriat","store","setStore","lataa_vitsit","base_url","lastPArt","limitcat","finalUrl","fetch","then","resp","json","value","validateValue","e","kat","target","map","x","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport { StoreContext } from \"./storeContext\";\r\nimport './Fetch.css'\r\n\r\n/**\r\n * toivottavasti muistin siistiä koodia ja jos en niin sori\r\n * kategoriat on tehty kovakoodauksella mikäli en muistanut/jaksanut hakea niitä\r\n */\r\nconst Fetch = () => {\r\n  const defaultJokeValue = 10;\r\n  const [maara, setMaara] = useState(defaultJokeValue);\r\n  const [valittukategoria, setValittukategoria] = useState(\"kaikki\", \"explicit\", \"nerdy\")\r\n  const [etunimi, setEtunnimi] = useState(\"Chuck\")\r\n  const [sukunimi, setSukunimi] = useState(\"Norris\")\r\n  const [kategoriat, setKategoriat] = useState([])\r\n  const [store, setStore] = useContext(StoreContext);\r\n  useEffect(() => {\r\n    setKategoriat([\"kaikki kategoriat\", \"explicit\", \"nerdy\"])\r\n  }, []);\r\n\r\n  const lataa_vitsit = () => {\r\n    let base_url = \"http://api.icndb.com/\"\r\n    let lastPArt = `jokes/random/${maara}?firstName=${etunimi}&lastName=${sukunimi}&escape=javascript`\r\n    let limitcat = `&limitTo=[${valittukategoria}]`\r\n    let finalUrl = base_url + lastPArt\r\n\r\n    if (valittukategoria === \"kaikki\") {\r\n      finalUrl = base_url + lastPArt\r\n    }\r\n    else {\r\n      finalUrl = base_url + lastPArt + limitcat\r\n    }\r\n    fetch(finalUrl)\r\n      .then((resp) => {\r\n        return resp.json();\r\n      })\r\n      .then((json) => {\r\n        //console.log(json.value)\r\n        //setvitsit(json.value);\r\n        setStore(json.value)\r\n      });\r\n  };\r\n\r\n  const validateValue = (e) => {\r\n    if (e >= 1 && e <= 10) {\r\n      //setCount(jokeCounter => jokeCounter + parseInt(e))\r\n      setMaara(e)\r\n    }\r\n  }\r\n  const kat = (e) => {\r\n    setValittukategoria(e)\r\n  }\r\n\r\n  return (\r\n    <div className=\"jokeBox\">\r\n      \r\n        <div className=\"labels\">\r\n          <label>Kategoriat</label>\r\n          <select className=\"sel\" onChange={e => kat(e.target.value)}>{kategoriat.map((x, i) => <option className=\"sel\" key={i}>{x}</option>)}</select>\r\n        </div>\r\n\r\n        <div className=\"labels\">\r\n          <label>Vitsien määrä</label>\r\n          <input type=\"number\" alt=\"maara\" name=\"quantity\" value={maara} onChange={e => validateValue(e.target.value)} />\r\n        </div>\r\n\r\n        <div className=\"labels\">\r\n          <label>Etunimi</label>\r\n          <input type=\"text\" placeholder=\"etunimi\" value={etunimi} onChange={e => setEtunnimi(e.target.value)}  ></input>\r\n        </div>\r\n\r\n        <div className=\"labels\">\r\n          <label>Sukunimi</label>\r\n          <input type=\"text\" placeholder=\"sukunimi\" value={sukunimi} onChange={e => setSukunimi(e.target.value)}  ></input>\r\n        </div>\r\n\r\n          <div className=\"labels\">\r\n            <button onClick={() => lataa_vitsit()}>Hae vitsit</button>\r\n          </div>\r\n        <div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Fetch;\r\n"]},"metadata":{},"sourceType":"module"}