{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\PrintJokes.js\",\n    _s = $RefreshSig$();\n\nimport { StoreContext } from \"./storeContext\";\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\n/**\r\n * Ihan hirveetä koodia mut toimii, eka count päivitys on ehdollistettu\r\n * koska count value on alussa (1), jota en tietenkään halunnut\r\n * varmaan olis löytyny joku järkevämpikin tapa tehdä tää\r\n */\n\nconst PrintJokes = () => {\n  _s();\n\n  const [store, setStore] = useContext(StoreContext);\n  const [count, setCount] = useState(0);\n  const j = Object.values(store);\n  const [firstUpdate, setFirstUpdate] = useState(true);\n  useEffect(() => {\n    if (firstUpdate) {\n      setFirstUpdate(false);\n    } else {\n      setCount(+j.length + +count);\n    }\n  }, [store]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"green\",\n      padding: 10,\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"vitsit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Printer, {\n      value: j\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), j.map((element, i) => {\n      if (!firstUpdate && count === 0) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ei yhtään vitsiä\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [i + 1, \". \", element.joke, \"\\n\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrintJokes, \"F8Q2ibkJhQ8wgVVWvfDaOP0jefQ=\");\n\n_c = PrintJokes;\nexport default PrintJokes;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintJokes\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/PrintJokes.js"],"names":["StoreContext","React","useEffect","useContext","useState","useRef","PrintJokes","store","setStore","count","setCount","j","Object","values","firstUpdate","setFirstUpdate","length","backgroundColor","padding","margin","map","element","i","joke"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,EAAiDC,MAAjD,QAA+D,OAA/D;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,UAAU,CAACH,YAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMO,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAV;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,IAAD,CAA9C;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,WAAJ,EAAiB;AACfC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KAFD,MAGK;AACHL,MAAAA,QAAQ,CAAE,CAACC,CAAC,CAACK,MAAH,GAAY,CAACP,KAAf,CAAR;AACD;AACF,GAPQ,EAON,CAACF,KAAD,CAPM,CAAT;AASA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEU,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,OAAO,EAAE,EAArC;AAAyCC,MAAAA,MAAM,EAAE;AAAjD,KAAZ;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAER;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHJ,EAKIA,CAAC,CAACS,GAAF,CAAM,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAGpB,UAAI,CAACR,WAAD,IAAgBL,KAAK,KAAK,CAA9B,EAAiC;AAC/B,4BAAO;AAAA,oBAAK;AAAL;AAAA;AAAA;AAAA;AAAA,gBAAP;AAED;;AAED,0BAAO;AAAA,mBAAIa,CAAC,GAAG,CAAR,EAAW,IAAX,EAAiBD,OAAO,CAACE,IAAzB,EAA+B,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAID,KAZD,CALJ,eAyBE;AAAA,gBAAKd;AAAL;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA9CD;;GAAMH,U;;KAAAA,U;AA+CN,eAAeA,UAAf","sourcesContent":["import { StoreContext } from \"./storeContext\";\r\nimport React, { useEffect, useContext, useState, useRef } from \"react\";\r\n\r\n/**\r\n * Ihan hirveetä koodia mut toimii, eka count päivitys on ehdollistettu\r\n * koska count value on alussa (1), jota en tietenkään halunnut\r\n * varmaan olis löytyny joku järkevämpikin tapa tehdä tää\r\n */\r\n\r\nconst PrintJokes = () => {\r\n  const [store, setStore] = useContext(StoreContext);\r\n  const [count, setCount] = useState(0);\r\n  const j = Object.values(store);\r\n  const [firstUpdate, setFirstUpdate] = useState(true)\r\n\r\n\r\n  useEffect(() => {\r\n    if (firstUpdate) {\r\n      setFirstUpdate(false)\r\n    }\r\n    else {\r\n      setCount((+j.length + +count))\r\n    }\r\n  }, [store])\r\n\r\n  return (\r\n    <div style={{ backgroundColor: \"green\", padding: 10, margin: 20 }}>\r\n      <h3>vitsit</h3>\r\n      \r\n        <Printer value={j}/>\r\n        {\r\n        j.map((element, i) => {\r\n\r\n\r\n          if (!firstUpdate && count === 0) {\r\n            return <h3>{\"Ei yhtään vitsiä\"}</h3>\r\n\r\n          }\r\n\r\n          return <p>{i + 1}{\". \"}{element.joke}{\"\\n\"}</p>\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        )\r\n      }\r\n\r\n\r\n\r\n      <h2>{count}</h2>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default PrintJokes;"]},"metadata":{},"sourceType":"module"}