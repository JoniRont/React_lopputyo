{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nconst Planets = () => {\n  _s();\n\n  const [hasError, setErrors] = useState(false);\n  const [planets, setPlanets] = useState({});\n\n  async function fetchData() {\n    const res = await fetch(\"https://swapi.co/api/planets/4/\");\n    res.json().then(res => setPlanets(res)).catch(err => setErrors(err));\n  }\n\n  useEffect(() => {\n    fetchData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: JSON.stringify(planets)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Has error: \", JSON.stringify(hasError)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Planets, \"Jou2pGnqKT58LRE015xs769Od8I=\");\n\n_c = Planets;\nexport default Planets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/Search.js"],"names":["React","useState","useEffect","Planets","hasError","setErrors","planets","setPlanets","fetchData","res","fetch","json","then","catch","err","JSON","stringify"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,iBAAeO,SAAf,GAA2B;AACzB,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAAvB;AACAD,IAAAA,GAAG,CACAE,IADH,GAEGC,IAFH,CAEQH,GAAG,IAAIF,UAAU,CAACE,GAAD,CAFzB,EAGGI,KAHH,CAGSC,GAAG,IAAIT,SAAS,CAACS,GAAD,CAHzB;AAID;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS;AACV,GAFQ,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA,gBAAOO,IAAI,CAACC,SAAL,CAAeV,OAAf;AAAP;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gCAAkBS,IAAI,CAACC,SAAL,CAAeZ,QAAf,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvBD;;GAAMD,O;;KAAAA,O;AAwBN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Planets = () => {\r\n  const [hasError, setErrors] = useState(false);\r\n  const [planets, setPlanets] = useState({});\r\n\r\n  async function fetchData() {\r\n    const res = await fetch(\"https://swapi.co/api/planets/4/\");\r\n    res\r\n      .json()\r\n      .then(res => setPlanets(res))\r\n      .catch(err => setErrors(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <span>{JSON.stringify(planets)}</span>\r\n      <hr />\r\n      <span>Has error: {JSON.stringify(hasError)}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default Planets;"]},"metadata":{},"sourceType":"module"}