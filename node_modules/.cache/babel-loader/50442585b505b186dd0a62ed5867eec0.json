{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Kurssit\\\\2020\\\\reaktiivinen_selainohjelmointi\\\\lopputyo\\\\src\\\\Fetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nconst Fetch = () => {\n  _s();\n\n  const defaulJokeValue = 10;\n  const [maara, setMaara] = useState(defaulJokeValue);\n  const [faktat, setFaktat] = useState([]);\n  const [jokeCounter, setCount] = useState(maara);\n  const tempArray = [];\n  useEffect(() => {\n    const lataa_faktat = () => {\n      let base_url = \"http://api.icndb.com/\";\n      fetch(base_url + `jokes/random/${maara}`).then(resp => {\n        return resp.json();\n      }).then(json => {\n        setFaktat(json.value);\n      });\n    };\n  }, [maara]);\n\n  const validateValue = e => {\n    if (e >= 1 && e <= 10) {\n      setCount(jokeCounter => jokeCounter + parseInt(e));\n      setMaara(e);\n      console.log(jokeCounter);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"vitsit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"jutut\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: maara,\n      type: \"number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setFaktat([]);\n        setMaara(1);\n      },\n      children: \"Tyhjenn\\xE4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => validateValue(fa),\n      children: \"Fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Faktat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: JSON.stringify(faktat.keys, [\"joke\"], 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), faktat.map((element, i) => {\n        //console.log(element[\"joke\"])\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [i + 1, \". \", element[\"joke\"], \"\\n\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Vitsej\\xE4 on haettu kaikkiaan: \", jokeCounter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Fetch, \"O/la9MqXyCBuJiBxZIRK3ccz+NA=\");\n\n_c = Fetch;\nexport default Fetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fetch\");","map":{"version":3,"sources":["C:/Kurssit/2020/reaktiivinen_selainohjelmointi/lopputyo/src/Fetch.js"],"names":["React","useEffect","useState","Fetch","defaulJokeValue","maara","setMaara","faktat","setFaktat","jokeCounter","setCount","tempArray","lataa_faktat","base_url","fetch","then","resp","json","value","validateValue","e","parseInt","console","log","fa","JSON","stringify","keys","map","element","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,eAAe,GAAG,EAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,eAAD,CAAlC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,WAAD,EAAcC,QAAd,IAA0BR,QAAQ,CAACG,KAAD,CAAxC;AACA,QAAMM,SAAS,GAAG,EAAlB;AAEEV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,YAAY,GAAG,MAAM;AACzB,UAAIC,QAAQ,GAAG,uBAAf;AAEAC,MAAAA,KAAK,CAACD,QAAQ,GAAI,gBAAeR,KAAM,EAAlC,CAAL,CACGU,IADH,CACSC,IAAD,IAAU;AACd,eAAOA,IAAI,CAACC,IAAL,EAAP;AACD,OAHH,EAIGF,IAJH,CAISE,IAAD,IAAU;AAEdT,QAAAA,SAAS,CAACS,IAAI,CAACC,KAAN,CAAT;AACD,OAPH;AAQD,KAXD;AAcD,GAfQ,EAeN,CAACb,KAAD,CAfM,CAAT;;AAmBF,QAAMc,aAAa,GAAIC,CAAD,IAAM;AAC1B,QAAGA,CAAC,IAAE,CAAH,IAAQA,CAAC,IAAE,EAAd,EAAiB;AACfV,MAAAA,QAAQ,CAACD,WAAW,IAAIA,WAAW,GAACY,QAAQ,CAACD,CAAD,CAApC,CAAR;AACAd,MAAAA,QAAQ,CAACc,CAAD,CAAR;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AAED;AACF,GARD;;AAaA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AACE,MAAA,KAAK,EAAEJ,KADT;AAGE,MAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,YALF,eAUE;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEG,QAAAA,SAAS,CAAC,EAAD,CAAT;AAAeF,QAAAA,QAAQ,CAAC,CAAD,CAAR;AAAa,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAYE;AAAQ,MAAA,OAAO,EAAE,MAAMa,aAAa,CAACK,EAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAcE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAA,kBAAIC,IAAI,CAACC,SAAL,CAAenB,MAAM,CAACoB,IAAtB,EAA4B,CAAC,MAAD,CAA5B,EAAsC,CAAtC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAHF,EAWIpB,MAAM,CAACqB,GAAP,CAAW,CAACC,OAAD,EAAUC,CAAV,KAAe;AACxB;AACF,4BAAO;AAAA,qBAAaA,CAAC,GAAC,CAAf,EAAkB,IAAlB,EAAwBD,OAAO,CAAC,MAAD,CAA/B,EAAyC,IAAzC;AAAA,WAASC,CAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACC,OAHD,CAXJ,eAgBE;AAAA,uDAAiCrB,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,CA3ED;;GAAMN,K;;KAAAA,K;AA6EN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Fetch = () => {\r\n  const defaulJokeValue = 10;\r\n  const [maara, setMaara] = useState(defaulJokeValue);\r\n  const [faktat, setFaktat] = useState([]);\r\n  const [jokeCounter, setCount] = useState(maara)\r\n  const tempArray = [];\r\n  \r\n    useEffect(() => {\r\n      const lataa_faktat = () => {\r\n        let base_url = \"http://api.icndb.com/\"\r\n  \r\n        fetch(base_url + `jokes/random/${maara}`)\r\n          .then((resp) => {\r\n            return resp.json();\r\n          })\r\n          .then((json) => {\r\n            \r\n            setFaktat(json.value);\r\n          });\r\n      };\r\n  \r\n      \r\n    }, [maara]);\r\n    \r\n  \r\n \r\n  const validateValue = (e) =>{\r\n    if(e>=1 && e<=10){\r\n      setCount(jokeCounter => jokeCounter+parseInt(e))\r\n      setMaara(e)\r\n      \r\n      console.log(jokeCounter)\r\n      \r\n    }\r\n  }\r\n  \r\n    \r\n    \r\n    \r\n  return (\r\n    <div>\r\n      <select>\r\n        <option>vitsit</option>\r\n        <option>jutut</option>\r\n      </select>\r\n      <input\r\n        value={maara}\r\n        \r\n        type=\"number\"\r\n      />\r\n      <button onClick={() => { setFaktat([]); setMaara(1);}}>Tyhjennä</button>\r\n      \r\n      <button onClick={() => validateValue(fa)}>Fetch</button>\r\n      \r\n      <div>\r\n        <h3>Faktat</h3>\r\n        \r\n        <p>{JSON.stringify(faktat.keys, [\"joke\"], 1)}</p>\r\n        \r\n        {\r\n        \r\n          \r\n          //console.log(faktat[0][\"joke\"])\r\n        }\r\n        {\r\n          faktat.map((element, i)=> {\r\n            //console.log(element[\"joke\"])\r\n          return <li key={i}>{i+1}{\". \"}{element[\"joke\"]}{\"\\n\"}</li>\r\n          })\r\n        }\r\n        <p>Vitsejä on haettu kaikkiaan: {jokeCounter}</p>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Fetch;\r\n"]},"metadata":{},"sourceType":"module"}